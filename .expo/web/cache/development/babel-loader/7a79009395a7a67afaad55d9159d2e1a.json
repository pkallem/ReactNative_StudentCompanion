{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-neu-element\\\\lib\\\\NeuInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NeuView from \"./NeuView\";\nimport PropTypes from 'prop-types';\n\nvar NeuInput = function NeuInput(props) {\n  var _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      textStyle = props.textStyle,\n      _props$placeholder = props.placeholder,\n      placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n      _props$onChangeText = props.onChangeText,\n      onChangeText = _props$onChangeText === void 0 ? function () {} : _props$onChangeText,\n      _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      Prefix = props.prefix,\n      rest = _objectWithoutProperties(props, [\"style\", \"textStyle\", \"placeholder\", \"onChangeText\", \"value\", \"prefix\"]);\n\n  var styles = StyleSheet.create({\n    input: {\n      borderBottomWidth: 0,\n      flex: 1\n    }\n  });\n  return React.createElement(NeuView, _extends({}, rest, {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      alignItems: 'stretch'\n    }),\n    inset: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingHorizontal: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, Prefix && React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginRight: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, Prefix), React.createElement(TextInput, {\n    style: _objectSpread(_objectSpread({}, styles.input), textStyle),\n    onChangeText: onChangeText,\n    placeholder: placeholder,\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n};\n\nNeuInput.propTypes = _objectSpread({\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  placeholder: PropTypes.string,\n  onChangeText: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}, NeuView.propTypes);\nexport default NeuInput;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-neu-element/lib/NeuInput.js"],"names":["React","NeuView","PropTypes","NeuInput","props","style","textStyle","placeholder","onChangeText","value","Prefix","prefix","rest","styles","StyleSheet","create","input","borderBottomWidth","flex","alignItems","flexDirection","paddingHorizontal","justifyContent","marginRight","propTypes","object","string","func","isRequired"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,OAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,qBASpBA,KAToB,CAEtBC,KAFsB;AAAA,MAEtBA,KAFsB,6BAEd,EAFc;AAAA,MAGtBC,SAHsB,GASpBF,KAToB,CAGtBE,SAHsB;AAAA,2BASpBF,KAToB,CAItBG,WAJsB;AAAA,MAItBA,WAJsB,mCAIR,EAJQ;AAAA,4BASpBH,KAToB,CAKtBI,YALsB;AAAA,MAKtBA,YALsB,oCAKP,YAAM,CAAE,CALD;AAAA,qBASpBJ,KAToB,CAMtBK,KANsB;AAAA,MAMtBA,KANsB,6BAMd,EANc;AAAA,MAOdC,MAPc,GASpBN,KAToB,CAOtBO,MAPsB;AAAA,MAQnBC,IARmB,4BASpBR,KAToB;;AAWxB,MAAMS,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,KAAK,EAAE;AACLC,MAAAA,iBAAiB,EAAE,CADd;AAELC,MAAAA,IAAI,EAAE;AAFD;AADwB,GAAlB,CAAf;AAOA,SACE,oBAAC,OAAD,eAAaN,IAAb;AAAmB,IAAA,KAAK,kCAAOP,KAAP;AAAcc,MAAAA,UAAU,EAAE;AAA1B,MAAxB;AAA+D,IAAA,KAAK,MAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,iBAAiB,EAAE;AAFd,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGX,MAAM,IACL,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,UAAU,EAAE,QADP;AAELG,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,WAAW,EAAE;AAHR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGb,MAPH,CAPJ,EAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,kCACAG,MAAM,CAACG,KADP,GAEAV,SAFA,CADP;AAKE,IAAA,YAAY,EAAEE,YALhB;AAME,IAAA,WAAW,EAAED,WANf;AAOE,IAAA,KAAK,EAAEE,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF;AA+BD,CAjDD;;AAmDAN,QAAQ,CAACqB,SAAT;AACEnB,EAAAA,KAAK,EAAEH,SAAS,CAACuB,MADnB;AAEEnB,EAAAA,SAAS,EAAEJ,SAAS,CAACuB,MAFvB;AAGElB,EAAAA,WAAW,EAAEL,SAAS,CAACwB,MAHzB;AAIElB,EAAAA,YAAY,EAAEN,SAAS,CAACyB,IAAV,CAAeC,UAJ/B;AAKEnB,EAAAA,KAAK,EAAEP,SAAS,CAACwB,MAAV,CAAiBE;AAL1B,GAMK3B,OAAO,CAACuB,SANb;AAQA,eAAerB,QAAf","sourcesContent":["import React from 'react';\nimport { TextInput, StyleSheet, View } from 'react-native';\nimport NeuView from './NeuView';\nimport PropTypes from 'prop-types';\n\nconst NeuInput = props => {\n  const {\n    style = {},\n    textStyle,\n    placeholder = '',\n    onChangeText = () => {},\n    value = '',\n    prefix: Prefix,\n    ...rest\n  } = props;\n\n  const styles = StyleSheet.create({\n    input: {\n      borderBottomWidth: 0,\n      flex: 1\n    }\n  });\n\n  return (\n    <NeuView {...rest} style={{ ...style, alignItems: 'stretch' }} inset>\n      <View\n        style={{\n          flexDirection: 'row',\n          paddingHorizontal: 12\n        }}\n      >\n        {Prefix && (\n          <View\n            style={{\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginRight: 6\n            }}\n          >\n            {Prefix}\n          </View>\n        )}\n        <TextInput\n          style={{\n            ...styles.input,\n            ...textStyle\n          }}\n          onChangeText={onChangeText}\n          placeholder={placeholder}\n          value={value}\n        />\n      </View>\n    </NeuView>\n  );\n};\n\nNeuInput.propTypes = {\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  placeholder: PropTypes.string,\n  onChangeText: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  ...NeuView.propTypes\n};\nexport default NeuInput;\n"]},"metadata":{},"sourceType":"module"}