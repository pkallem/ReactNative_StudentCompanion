{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default {\n  get name() {\n    return 'ExponentPedometer';\n  },\n\n  isAvailableAsync: function isAvailableAsync() {\n    return _regeneratorRuntime.async(function isAvailableAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", false);\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  startObserving: function startObserving() {},\n  stopObserving: function stopObserving() {}\n};","map":{"version":3,"sources":["../src/ExponentPedometer.web.ts"],"names":[],"mappings":";AAAA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,mBAAP;AACD,GAHY;;AAIP,EAAA,gBAJO;AAAA;AAAA;AAAA;AAAA;AAAA,6CAKJ,KALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOb,EAAA,cAPa,4BAOC,CAAK,CAPN;AAQb,EAAA,aARa,2BAQA,CAAK;AARL,CAAf","sourcesContent":["export default {\n  get name(): string {\n    return 'ExponentPedometer';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    return false;\n  },\n  startObserving() {},\n  stopObserving() {},\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}