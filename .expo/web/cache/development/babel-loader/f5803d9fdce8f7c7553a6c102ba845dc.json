{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-neu-element\\\\lib\\\\NeuSwitch.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport NeuView from \"./NeuView\";\nimport NeuButton from \"./NeuButton\";\nimport PropTypes from 'prop-types';\n\nvar NeuSwitch = function NeuSwitch(props) {\n  var isPressed = props.isPressed,\n      setIsPressed = props.setIsPressed,\n      customGradient = props.customGradient,\n      color = props.color,\n      containerWidth = props.containerWidth,\n      containerHeight = props.containerHeight,\n      buttonWidth = props.buttonWidth,\n      buttonHeight = props.buttonHeight;\n  return React.createElement(NeuView, {\n    color: color,\n    width: containerWidth,\n    height: containerHeight,\n    borderRadius: 50,\n    concave: true,\n    customGradient: isPressed && customGradient,\n    containerStyle: {\n      alignItems: isPressed ? 'flex-end' : 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(NeuButton, {\n    color: color,\n    width: buttonWidth,\n    height: buttonHeight,\n    borderRadius: 50,\n    isPressed: isPressed,\n    setIsPressed: setIsPressed,\n    noPressEffect: true,\n    convex: true,\n    noShadow: customGradient && isPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n};\n\nNeuSwitch.propTypes = _objectSpread({\n  isPressed: PropTypes.bool.isRequired,\n  setIsPressed: PropTypes.func.isRequired,\n  customGradient: PropTypes.array,\n  color: PropTypes.string.isRequired,\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired,\n  buttonWidth: PropTypes.number.isRequired,\n  buttonHeight: PropTypes.number.isRequired\n}, NeuView.propTypes);\nexport default NeuSwitch;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-neu-element/lib/NeuSwitch.js"],"names":["React","NeuView","NeuButton","PropTypes","NeuSwitch","props","isPressed","setIsPressed","customGradient","color","containerWidth","containerHeight","buttonWidth","buttonHeight","alignItems","propTypes","bool","isRequired","func","array","string","number"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,MAEvBC,SAFuB,GAUrBD,KAVqB,CAEvBC,SAFuB;AAAA,MAGvBC,YAHuB,GAUrBF,KAVqB,CAGvBE,YAHuB;AAAA,MAIvBC,cAJuB,GAUrBH,KAVqB,CAIvBG,cAJuB;AAAA,MAKvBC,KALuB,GAUrBJ,KAVqB,CAKvBI,KALuB;AAAA,MAMvBC,cANuB,GAUrBL,KAVqB,CAMvBK,cANuB;AAAA,MAOvBC,eAPuB,GAUrBN,KAVqB,CAOvBM,eAPuB;AAAA,MAQvBC,WARuB,GAUrBP,KAVqB,CAQvBO,WARuB;AAAA,MASvBC,YATuB,GAUrBR,KAVqB,CASvBQ,YATuB;AAWzB,SACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,KAAK,EAAEC,cAFT;AAGE,IAAA,MAAM,EAAEC,eAHV;AAIE,IAAA,YAAY,EAAE,EAJhB;AAKE,IAAA,OAAO,MALT;AAME,IAAA,cAAc,EAAEL,SAAS,IAAIE,cAN/B;AAOE,IAAA,cAAc,EAAE;AACdM,MAAAA,UAAU,EAAER,SAAS,GAAG,UAAH,GAAgB;AADvB,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEG,KADT;AAEE,IAAA,KAAK,EAAEG,WAFT;AAGE,IAAA,MAAM,EAAEC,YAHV;AAIE,IAAA,YAAY,EAAE,EAJhB;AAME,IAAA,SAAS,EAAEP,SANb;AAOE,IAAA,YAAY,EAAEC,YAPhB;AAQE,IAAA,aAAa,MARf;AASE,IAAA,MAAM,MATR;AAUE,IAAA,QAAQ,EAAEC,cAAc,IAAIF,SAV9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AA0BD,CArCD;;AAuCAF,SAAS,CAACW,SAAV;AACET,EAAAA,SAAS,EAAEH,SAAS,CAACa,IAAV,CAAeC,UAD5B;AAEEV,EAAAA,YAAY,EAAEJ,SAAS,CAACe,IAAV,CAAeD,UAF/B;AAGET,EAAAA,cAAc,EAAEL,SAAS,CAACgB,KAH5B;AAIEV,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBH,UAJ1B;AAKEP,EAAAA,cAAc,EAAEP,SAAS,CAACkB,MAAV,CAAiBJ,UALnC;AAMEN,EAAAA,eAAe,EAAER,SAAS,CAACkB,MAAV,CAAiBJ,UANpC;AAOEL,EAAAA,WAAW,EAAET,SAAS,CAACkB,MAAV,CAAiBJ,UAPhC;AAQEJ,EAAAA,YAAY,EAAEV,SAAS,CAACkB,MAAV,CAAiBJ;AARjC,GASKhB,OAAO,CAACc,SATb;AAYA,eAAeX,SAAf","sourcesContent":["import React from 'react';\nimport NeuView from './NeuView';\nimport NeuButton from './NeuButton';\nimport PropTypes from 'prop-types';\n\nconst NeuSwitch = props => {\n  const {\n    isPressed,\n    setIsPressed,\n    customGradient,\n    color,\n    containerWidth,\n    containerHeight,\n    buttonWidth,\n    buttonHeight\n  } = props;\n  return (\n    <NeuView\n      color={color}\n      width={containerWidth}\n      height={containerHeight}\n      borderRadius={50}\n      concave\n      customGradient={isPressed && customGradient}\n      containerStyle={{\n        alignItems: isPressed ? 'flex-end' : 'flex-start'\n      }}\n    >\n      <NeuButton\n        color={color}\n        width={buttonWidth}\n        height={buttonHeight}\n        borderRadius={50}\n        // style={{marginHorizontal: 5}}\n        isPressed={isPressed}\n        setIsPressed={setIsPressed}\n        noPressEffect\n        convex\n        noShadow={customGradient && isPressed}\n      />\n    </NeuView>\n  );\n};\n\nNeuSwitch.propTypes = {\n  isPressed: PropTypes.bool.isRequired,\n  setIsPressed: PropTypes.func.isRequired,\n  customGradient: PropTypes.array,\n  color: PropTypes.string.isRequired,\n  containerWidth: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired,\n  buttonWidth: PropTypes.number.isRequired,\n  buttonHeight: PropTypes.number.isRequired,\n  ...NeuView.propTypes\n};\n\nexport default NeuSwitch;\n"]},"metadata":{},"sourceType":"module"}