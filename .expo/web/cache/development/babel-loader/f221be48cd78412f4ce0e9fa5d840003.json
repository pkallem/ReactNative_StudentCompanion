{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\text\\\\Text.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { fonts, withTheme } from \"../config\";\nimport normalize from \"../helpers/normalizeText\";\n\nvar TextElement = function TextElement(props) {\n  var style = props.style,\n      children = props.children,\n      h1 = props.h1,\n      h2 = props.h2,\n      h3 = props.h3,\n      h4 = props.h4,\n      fontFamily = props.fontFamily,\n      rest = _objectWithoutProperties(props, [\"style\", \"children\", \"h1\", \"h2\", \"h3\", \"h4\", \"fontFamily\"]);\n\n  return React.createElement(Text, _extends({\n    style: StyleSheet.flatten([styles.text, h1 && {\n      fontSize: normalize(40)\n    }, h2 && {\n      fontSize: normalize(34)\n    }, h3 && {\n      fontSize: normalize(28)\n    }, h4 && {\n      fontSize: normalize(22)\n    }, h1 && styles.bold, h2 && styles.bold, h3 && styles.bold, h4 && styles.bold, fontFamily && {\n      fontFamily: fontFamily\n    }, style && style])\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nTextElement.propTypes = {\n  style: PropTypes.any,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  fontFamily: PropTypes.string,\n  children: PropTypes.any\n};\nvar styles = StyleSheet.create({\n  text: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.regular)\n  })),\n  bold: _objectSpread({}, Platform.select({\n    android: _objectSpread({}, fonts.android.bold)\n  }))\n});\nexport { TextElement };\nexport default withTheme(TextElement, 'Text');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/text/Text.js"],"names":["React","PropTypes","fonts","withTheme","normalize","TextElement","props","style","children","h1","h2","h3","h4","fontFamily","rest","StyleSheet","flatten","styles","text","fontSize","bold","propTypes","any","bool","string","create","Platform","select","android","regular"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAGA,SAASC,KAAT,EAAgBC,SAAhB;AACA,OAAOC,SAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA,MACnBC,KADmB,GACsCD,KADtC,CACnBC,KADmB;AAAA,MACZC,QADY,GACsCF,KADtC,CACZE,QADY;AAAA,MACFC,EADE,GACsCH,KADtC,CACFG,EADE;AAAA,MACEC,EADF,GACsCJ,KADtC,CACEI,EADF;AAAA,MACMC,EADN,GACsCL,KADtC,CACMK,EADN;AAAA,MACUC,EADV,GACsCN,KADtC,CACUM,EADV;AAAA,MACcC,UADd,GACsCP,KADtC,CACcO,UADd;AAAA,MAC6BC,IAD7B,4BACsCR,KADtC;;AAG3B,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAES,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACC,IADiB,EAExBT,EAAE,IAAI;AAAEU,MAAAA,QAAQ,EAAEf,SAAS,CAAC,EAAD;AAArB,KAFkB,EAGxBM,EAAE,IAAI;AAAES,MAAAA,QAAQ,EAAEf,SAAS,CAAC,EAAD;AAArB,KAHkB,EAIxBO,EAAE,IAAI;AAAEQ,MAAAA,QAAQ,EAAEf,SAAS,CAAC,EAAD;AAArB,KAJkB,EAKxBQ,EAAE,IAAI;AAAEO,MAAAA,QAAQ,EAAEf,SAAS,CAAC,EAAD;AAArB,KALkB,EAMxBK,EAAE,IAAIQ,MAAM,CAACG,IANW,EAOxBV,EAAE,IAAIO,MAAM,CAACG,IAPW,EAQxBT,EAAE,IAAIM,MAAM,CAACG,IARW,EASxBR,EAAE,IAAIK,MAAM,CAACG,IATW,EAUxBP,UAAU,IAAI;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAVU,EAWxBN,KAAK,IAAIA,KAXe,CAAnB;AADT,KAcMO,IAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBGN,QAhBH,CADF;AAoBD,CAvBD;;AAyBAH,WAAW,CAACgB,SAAZ,GAAwB;AACtBd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,GADK;AAEtBb,EAAAA,EAAE,EAAER,SAAS,CAACsB,IAFQ;AAGtBb,EAAAA,EAAE,EAAET,SAAS,CAACsB,IAHQ;AAItBZ,EAAAA,EAAE,EAAEV,SAAS,CAACsB,IAJQ;AAKtBX,EAAAA,EAAE,EAAEX,SAAS,CAACsB,IALQ;AAMtBV,EAAAA,UAAU,EAAEZ,SAAS,CAACuB,MANA;AAOtBhB,EAAAA,QAAQ,EAAEP,SAAS,CAACqB;AAPE,CAAxB;AAUA,IAAML,MAAM,GAAGF,UAAU,CAACU,MAAX,CAAkB;AAC/BP,EAAAA,IAAI,oBACCQ,QAAQ,CAACC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,oBACF1B,KAAK,CAAC0B,OAAN,CAAcC,OADZ;AADU,GAAhB,CADD,CAD2B;AAQ/BT,EAAAA,IAAI,oBACCM,QAAQ,CAACC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,oBACF1B,KAAK,CAAC0B,OAAN,CAAcR,IADZ;AADU,GAAhB,CADD;AAR2B,CAAlB,CAAf;AAiBA,SAASf,WAAT;AACA,eAAeF,SAAS,CAACE,WAAD,EAAc,MAAd,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text, StyleSheet, Platform } from 'react-native';\n\nimport { fonts, withTheme } from '../config';\nimport normalize from '../helpers/normalizeText';\n\nconst TextElement = props => {\n  const { style, children, h1, h2, h3, h4, fontFamily, ...rest } = props;\n\n  return (\n    <Text\n      style={StyleSheet.flatten([\n        styles.text,\n        h1 && { fontSize: normalize(40) },\n        h2 && { fontSize: normalize(34) },\n        h3 && { fontSize: normalize(28) },\n        h4 && { fontSize: normalize(22) },\n        h1 && styles.bold,\n        h2 && styles.bold,\n        h3 && styles.bold,\n        h4 && styles.bold,\n        fontFamily && { fontFamily },\n        style && style,\n      ])}\n      {...rest}\n    >\n      {children}\n    </Text>\n  );\n};\n\nTextElement.propTypes = {\n  style: PropTypes.any,\n  h1: PropTypes.bool,\n  h2: PropTypes.bool,\n  h3: PropTypes.bool,\n  h4: PropTypes.bool,\n  fontFamily: PropTypes.string,\n  children: PropTypes.any,\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.regular,\n      },\n    }),\n  },\n  bold: {\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n    }),\n  },\n});\n\nexport { TextElement };\nexport default withTheme(TextElement, 'Text');\n"]},"metadata":{},"sourceType":"module"}