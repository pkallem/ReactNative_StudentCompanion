{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nimport Text from \"../text/Text\";\nimport normalize from \"../helpers/normalizeText\";\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var theme = props.theme,\n      rest = _objectWithoutProperties(props, [\"theme\"]);\n\n  var Component = rest.component,\n      buttons = rest.buttons,\n      _onPress = rest.onPress,\n      selectedIndex = rest.selectedIndex,\n      selectedIndexes = rest.selectedIndexes,\n      selectMultiple = rest.selectMultiple,\n      containerStyle = rest.containerStyle,\n      innerBorderStyle = rest.innerBorderStyle,\n      lastBorderStyle = rest.lastBorderStyle,\n      buttonStyle = rest.buttonStyle,\n      textStyle = rest.textStyle,\n      selectedTextStyle = rest.selectedTextStyle,\n      selectedButtonStyle = rest.selectedButtonStyle,\n      _rest$underlayColor = rest.underlayColor,\n      underlayColor = _rest$underlayColor === void 0 ? theme.colors.primary : _rest$underlayColor,\n      activeOpacity = rest.activeOpacity,\n      onHideUnderlay = rest.onHideUnderlay,\n      onShowUnderlay = rest.onShowUnderlay,\n      setOpacityTo = rest.setOpacityTo,\n      containerBorderRadius = rest.containerBorderRadius,\n      disableSelected = rest.disableSelected,\n      attributes = _objectWithoutProperties(rest, [\"component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"lastBorderStyle\", \"buttonStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"containerBorderRadius\", \"disableSelected\"]);\n\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && innerBorderStyle.hasOwnProperty('width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), buttons.map(function (button, i) {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    return React.createElement(View, {\n      key: i,\n      style: StyleSheet.flatten([styles.button, i < buttons.length - 1 && {\n        borderRightWidth: i === 0 ? 0 : innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === 1 && {\n        borderLeftWidth: innerBorderWidth,\n        borderLeftColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }, i === buttons.length - 1 && _objectSpread(_objectSpread({}, lastBorderStyle), {}, {\n        borderTopRightRadius: containerBorderRadius,\n        borderBottomRightRadius: containerBorderRadius\n      }), i === 0 && {\n        borderTopLeftRadius: containerBorderRadius,\n        borderBottomLeftRadius: containerBorderRadius\n      }]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, React.createElement(Component, {\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: disableSelected && isSelected ? true : false,\n      onPress: function onPress() {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(function (index) {\n              return index !== i;\n            }));\n          } else {\n            _onPress([].concat(_toConsumableArray(selectedIndexes), [i]));\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, button.element ? React.createElement(button.element, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }) : React.createElement(Text, {\n      testID: \"buttonGroupItemText\",\n      style: StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, button))));\n  }));\n};\n\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5,\n    marginTop: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  buttonText: function buttonText(theme) {\n    return _objectSpread({\n      fontSize: normalize(13),\n      color: theme.colors.grey2\n    }, Platform.select({\n      ios: {\n        fontWeight: '500'\n      }\n    }));\n  }\n};\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  component: PropTypes.any,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  selectedTextStyle: NativeText.propTypes.style,\n  selectedButtonStyle: ViewPropTypes.style,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.any,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number\n  }),\n  lastBorderStyle: PropTypes.oneOfType([ViewPropTypes.style, NativeText.propTypes.style]),\n  buttonStyle: ViewPropTypes.style,\n  containerBorderRadius: PropTypes.number,\n  disableSelected: PropTypes.bool,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object\n};\nButtonGroup.defaultProps = {\n  selectedIndexes: [],\n  selectMultiple: false,\n  containerBorderRadius: 3,\n  onPress: function onPress() {},\n  component: Platform.OS === 'ios' ? TouchableOpacity : TouchableNativeFeedback\n};\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","Text","normalize","ButtonGroup","props","theme","rest","Component","component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","lastBorderStyle","buttonStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","containerBorderRadius","disableSelected","attributes","innerBorderWidth","hasOwnProperty","width","StyleSheet","flatten","styles","container","map","button","i","isSelected","includes","length","borderRightWidth","borderRightColor","color","grey4","borderLeftWidth","borderLeftColor","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","filter","index","textContainer","backgroundColor","element","buttonText","flex","justifyContent","alignItems","marginLeft","marginRight","marginBottom","marginTop","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","ios","fontWeight","propTypes","object","any","func","array","style","NativeText","string","number","arrayOf","shape","oneOfType","bool","defaultProps","OS","TouchableOpacity","TouchableNativeFeedback"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text as NativeText,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\nimport Text from '../text/Text';\nimport normalize from '../helpers/normalizeText';\n\nconst ButtonGroup = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    component: Component,\n    buttons,\n    onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    lastBorderStyle,\n    buttonStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    containerBorderRadius,\n    disableSelected,\n    ...attributes\n  } = rest;\n\n  let innerBorderWidth = 1;\n\n  if (innerBorderStyle && innerBorderStyle.hasOwnProperty('width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        containerStyle && containerStyle,\n      ])}\n    >\n      {buttons.map((button, i) => {\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n\n        return (\n          <View\n            key={i}\n            style={StyleSheet.flatten([\n              // FIXME: This is a workaround to the borderColor and borderRadius bug\n              // react-native ref: https://github.com/facebook/react-native/issues/8236\n              styles.button,\n              i < buttons.length - 1 && {\n                borderRightWidth: i === 0 ? 0 : innerBorderWidth,\n                borderRightColor:\n                  (innerBorderStyle && innerBorderStyle.color) ||\n                  theme.colors.grey4,\n              },\n              i === 1 && {\n                borderLeftWidth: innerBorderWidth,\n                borderLeftColor:\n                  (innerBorderStyle && innerBorderStyle.color) ||\n                  theme.colors.grey4,\n              },\n              i === buttons.length - 1 && {\n                ...lastBorderStyle,\n                borderTopRightRadius: containerBorderRadius,\n                borderBottomRightRadius: containerBorderRadius,\n              },\n              i === 0 && {\n                borderTopLeftRadius: containerBorderRadius,\n                borderBottomLeftRadius: containerBorderRadius,\n              },\n            ])}\n          >\n            <Component\n              activeOpacity={activeOpacity}\n              setOpacityTo={setOpacityTo}\n              onHideUnderlay={onHideUnderlay}\n              onShowUnderlay={onShowUnderlay}\n              underlayColor={underlayColor}\n              disabled={disableSelected && isSelected ? true : false}\n              onPress={() => {\n                if (selectMultiple) {\n                  if (selectedIndexes.includes(i)) {\n                    onPress(selectedIndexes.filter(index => index !== i));\n                  } else {\n                    onPress([...selectedIndexes, i]);\n                  }\n                } else {\n                  onPress(i);\n                }\n              }}\n              style={styles.button}\n            >\n              <View\n                style={StyleSheet.flatten([\n                  styles.textContainer,\n                  buttonStyle && buttonStyle,\n                  isSelected && {\n                    backgroundColor: theme.colors.primary,\n                  },\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\n                ])}\n              >\n                {button.element ? (\n                  <button.element />\n                ) : (\n                  <Text\n                    testID=\"buttonGroupItemText\"\n                    style={StyleSheet.flatten([\n                      styles.buttonText(theme),\n                      textStyle && textStyle,\n                      isSelected && { color: '#fff' },\n                      isSelected && selectedTextStyle,\n                    ])}\n                  >\n                    {button}\n                  </Text>\n                )}\n              </View>\n            </Component>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    flex: 1,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    marginLeft: 10,\n    marginRight: 10,\n    marginBottom: 5,\n    marginTop: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40,\n  },\n  buttonText: theme => ({\n    fontSize: normalize(13),\n    color: theme.colors.grey2,\n    ...Platform.select({\n      ios: {\n        fontWeight: '500',\n      },\n    }),\n  }),\n};\n\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  component: PropTypes.any,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: ViewPropTypes.style,\n  textStyle: NativeText.propTypes.style,\n  selectedTextStyle: NativeText.propTypes.style,\n  selectedButtonStyle: ViewPropTypes.style,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.any,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number,\n  }),\n  lastBorderStyle: PropTypes.oneOfType([\n    ViewPropTypes.style,\n    NativeText.propTypes.style,\n  ]),\n  buttonStyle: ViewPropTypes.style,\n  containerBorderRadius: PropTypes.number,\n  disableSelected: PropTypes.bool,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nButtonGroup.defaultProps = {\n  selectedIndexes: [],\n  selectMultiple: false,\n  containerBorderRadius: 3,\n  onPress: () => {},\n  component: Platform.OS === 'ios' ? TouchableOpacity : TouchableNativeFeedback,\n};\n\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');\n"]},"metadata":{},"sourceType":"module"}