{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\list\\\\ListItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { renderNode, nodeType } from \"../helpers\";\nimport { ViewPropTypes, TextPropTypes, withTheme } from \"../config\";\nimport Avatar from \"../avatar/Avatar\";\nimport Badge from \"../badge/badge\";\nimport CheckBox from \"../checkbox/CheckBox\";\nimport Icon from \"../icons/Icon\";\nimport Text from \"../text/Text\";\nimport ButtonGroup from \"../buttons/ButtonGroup\";\nimport Input from \"../input/Input\";\nvar ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';\nvar chevronDefaultProps = {\n  type: Platform.OS === 'ios' ? 'ionicon' : 'material',\n  color: '#D1D1D6',\n  name: Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',\n  size: 16\n};\n\nvar checkmarkDefaultProps = function checkmarkDefaultProps(theme) {\n  return {\n    name: 'check',\n    size: 20,\n    color: theme.colors.primary\n  };\n};\n\nvar renderText = function renderText(content, defaultProps, style) {\n  return renderNode(Text, content, _objectSpread(_objectSpread({}, defaultProps), {}, {\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style])\n  }));\n};\n\nvar renderAvatar = function renderAvatar(content) {\n  return renderNode(Avatar, content, {\n    size: 40,\n    rounded: true\n  });\n};\n\nvar renderIcon = function renderIcon(content) {\n  return renderNode(Icon, content, {\n    color: Platform.OS === 'ios' ? null : ANDROID_SECONDARY,\n    size: 24\n  });\n};\n\nvar ListItem = function ListItem(props) {\n  var title = props.title,\n      titleStyle = props.titleStyle,\n      titleProps = props.titleProps,\n      subtitle = props.subtitle,\n      subtitleStyle = props.subtitleStyle,\n      subtitleProps = props.subtitleProps,\n      containerStyle = props.containerStyle,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? onPress || onLongPress ? TouchableHighlight : View : _props$component,\n      leftIcon = props.leftIcon,\n      leftAvatar = props.leftAvatar,\n      leftElement = props.leftElement,\n      rightIcon = props.rightIcon,\n      rightAvatar = props.rightAvatar,\n      rightElement = props.rightElement,\n      rightTitle = props.rightTitle,\n      rightTitleStyle = props.rightTitleStyle,\n      rightTitleProps = props.rightTitleProps,\n      rightSubtitle = props.rightSubtitle,\n      rightSubtitleStyle = props.rightSubtitleStyle,\n      rightSubtitleProps = props.rightSubtitleProps,\n      input = props.input,\n      buttonGroup = props.buttonGroup,\n      switchProps = props.switch,\n      checkBox = props.checkBox,\n      badge = props.badge,\n      chevron = props.chevron,\n      contentContainerStyle = props.contentContainerStyle,\n      rightContentContainerStyle = props.rightContentContainerStyle,\n      checkmark = props.checkmark,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      bottomDivider = props.bottomDivider,\n      topDivider = props.topDivider,\n      pad = props.pad,\n      linearGradientProps = props.linearGradientProps,\n      _props$ViewComponent = props.ViewComponent,\n      ViewComponent = _props$ViewComponent === void 0 ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : View : _props$ViewComponent,\n      theme = props.theme,\n      attributes = _objectWithoutProperties(props, [\"title\", \"titleStyle\", \"titleProps\", \"subtitle\", \"subtitleStyle\", \"subtitleProps\", \"containerStyle\", \"onPress\", \"onLongPress\", \"component\", \"leftIcon\", \"leftAvatar\", \"leftElement\", \"rightIcon\", \"rightAvatar\", \"rightElement\", \"rightTitle\", \"rightTitleStyle\", \"rightTitleProps\", \"rightSubtitle\", \"rightSubtitleStyle\", \"rightSubtitleProps\", \"input\", \"buttonGroup\", \"switch\", \"checkBox\", \"badge\", \"chevron\", \"contentContainerStyle\", \"rightContentContainerStyle\", \"checkmark\", \"disabled\", \"disabledStyle\", \"bottomDivider\", \"topDivider\", \"pad\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n\n  return React.createElement(Component, _extends({}, attributes, {\n    onPress: onPress,\n    onLongPress: onLongPress,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }), React.createElement(PadView, _extends({\n    Component: ViewComponent\n  }, linearGradientProps, {\n    style: StyleSheet.flatten([styles.container(theme), (buttonGroup || switchProps) && {\n      paddingVertical: 8\n    }, topDivider && {\n      borderTopWidth: StyleSheet.hairlineWidth\n    }, bottomDivider && {\n      borderBottomWidth: StyleSheet.hairlineWidth\n    }, containerStyle, disabled && disabledStyle]),\n    pad: pad,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), renderNode(Text, leftElement), renderIcon(leftIcon), renderAvatar(leftAvatar), (title || subtitle) && React.createElement(View, {\n    style: StyleSheet.flatten([styles.contentContainer, contentContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, renderText(title, _objectSpread({\n    testID: 'listItemTitle'\n  }, titleProps), StyleSheet.flatten([styles.title, titleStyle])), renderText(subtitle, subtitleProps, StyleSheet.flatten([styles.subtitle, subtitleStyle]))), (!!rightTitle || !!rightSubtitle) && React.createElement(View, {\n    style: StyleSheet.flatten([styles.rightContentContainer, rightContentContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, renderText(rightTitle, rightTitleProps, StyleSheet.flatten([styles.title, styles.rightTitle, rightTitleStyle])), renderText(rightSubtitle, rightSubtitleProps, StyleSheet.flatten([styles.subtitle, styles.rightSubtitle, rightSubtitleStyle]))), input && React.createElement(Input, _extends({}, input, {\n    inputStyle: StyleSheet.flatten([styles.input, input && input.inputStyle]),\n    inputContainerStyle: StyleSheet.flatten([styles.inputContentContainer, input && input.inputContainerStyle]),\n    containerStyle: StyleSheet.flatten([styles.inputContainer, input && input.containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  })), switchProps && React.createElement(Switch, _extends({}, switchProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  })), checkBox && React.createElement(CheckBox, _extends({}, checkBox, {\n    containerStyle: StyleSheet.flatten([styles.checkboxContainer, checkBox && checkBox.containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  })), badge && React.createElement(Badge, _extends({}, badge, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  })), buttonGroup && React.createElement(ButtonGroup, _extends({}, buttonGroup, {\n    containerStyle: StyleSheet.flatten([styles.buttonGroupContainer, buttonGroup && buttonGroup.containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  })), renderAvatar(rightAvatar), renderIcon(rightIcon), renderNode(Text, rightElement), renderNode(Icon, checkmark, checkmarkDefaultProps(theme)), renderNode(Icon, chevron, chevronDefaultProps)));\n};\n\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread(_objectSpread({}, Platform.select({\n      ios: {\n        padding: 14\n      },\n      default: {\n        padding: 16\n      }\n    })), {}, {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: 'white',\n      borderColor: theme.colors.divider\n    });\n  },\n  title: _objectSpread({\n    backgroundColor: 'transparent'\n  }, Platform.select({\n    ios: {\n      fontSize: 17\n    },\n    default: {\n      fontSize: 16\n    }\n  })),\n  subtitle: _objectSpread({\n    backgroundColor: 'transparent'\n  }, Platform.select({\n    ios: {\n      fontSize: 15\n    },\n    default: {\n      color: ANDROID_SECONDARY,\n      fontSize: 14\n    }\n  })),\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  rightContentContainer: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  inputContainer: {\n    flex: 1\n  },\n  inputContentContainer: {\n    flex: 1,\n    borderBottomWidth: 0,\n    width: null,\n    height: null\n  },\n  input: {\n    flex: 1,\n    textAlign: 'right',\n    width: null,\n    height: null,\n    marginLeft: 0\n  },\n  checkboxContainer: {\n    margin: 0,\n    marginRight: 0,\n    marginLeft: 0,\n    padding: 0\n  },\n  buttonGroupContainer: {\n    flex: 1,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0\n  },\n  rightTitle: {\n    color: ANDROID_SECONDARY\n  },\n  rightSubtitle: {\n    color: ANDROID_SECONDARY\n  }\n};\nListItem.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  contentContainerStyle: ViewPropTypes.style,\n  rightContentContainerStyle: ViewPropTypes.style,\n  component: PropTypes.func,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: TextPropTypes.style,\n  titleProps: PropTypes.object,\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  subtitleStyle: TextPropTypes.style,\n  subtitleProps: PropTypes.object,\n  leftIcon: nodeType,\n  leftAvatar: nodeType,\n  leftElement: nodeType,\n  rightIcon: nodeType,\n  rightAvatar: nodeType,\n  rightElement: nodeType,\n  rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightTitleStyle: TextPropTypes.style,\n  rightTitleProps: PropTypes.object,\n  rightSubtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightSubtitleStyle: TextPropTypes.style,\n  rightSubtitleProps: PropTypes.object,\n  input: PropTypes.object,\n  buttonGroup: PropTypes.object,\n  switch: PropTypes.object,\n  checkBox: PropTypes.object,\n  badge: PropTypes.object,\n  chevron: nodeType,\n  checkmark: nodeType,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  topDivider: PropTypes.bool,\n  bottomDivider: PropTypes.bool,\n  pad: PropTypes.number,\n  linearGradientProps: PropTypes.object,\n  ViewComponent: PropTypes.func,\n  theme: PropTypes.object\n};\nListItem.defaultProps = {\n  pad: 16\n};\n\nvar PadView = function PadView(_ref) {\n  var children = _ref.children,\n      pad = _ref.pad,\n      Component = _ref.Component,\n      props = _objectWithoutProperties(_ref, [\"children\", \"pad\", \"Component\"]);\n\n  var childrens = React.Children.toArray(children);\n  var length = childrens.length;\n  var Container = Component || View;\n  return React.createElement(Container, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }), React.Children.map(childrens, function (child, index) {\n    return child && [child, index !== length - 1 && React.createElement(View, {\n      width: pad,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 52\n      }\n    })];\n  }));\n};\n\nexport { ListItem };\nexport default withTheme(ListItem, 'ListItem');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/list/ListItem.js"],"names":["React","PropTypes","renderNode","nodeType","ViewPropTypes","TextPropTypes","withTheme","Avatar","Badge","CheckBox","Icon","Text","ButtonGroup","Input","ANDROID_SECONDARY","chevronDefaultProps","type","Platform","OS","color","name","size","checkmarkDefaultProps","theme","colors","primary","renderText","content","defaultProps","style","StyleSheet","flatten","renderAvatar","rounded","renderIcon","ListItem","props","title","titleStyle","titleProps","subtitle","subtitleStyle","subtitleProps","containerStyle","onPress","onLongPress","component","Component","TouchableHighlight","View","leftIcon","leftAvatar","leftElement","rightIcon","rightAvatar","rightElement","rightTitle","rightTitleStyle","rightTitleProps","rightSubtitle","rightSubtitleStyle","rightSubtitleProps","input","buttonGroup","switchProps","switch","checkBox","badge","chevron","contentContainerStyle","rightContentContainerStyle","checkmark","disabled","disabledStyle","bottomDivider","topDivider","pad","linearGradientProps","ViewComponent","global","Expo","LinearGradient","attributes","styles","container","paddingVertical","borderTopWidth","hairlineWidth","borderBottomWidth","contentContainer","testID","rightContentContainer","inputStyle","inputContentContainer","inputContainerStyle","inputContainer","checkboxContainer","buttonGroupContainer","select","ios","padding","default","flexDirection","alignItems","backgroundColor","borderColor","divider","fontSize","flex","justifyContent","width","height","textAlign","marginLeft","margin","marginRight","marginTop","marginBottom","propTypes","func","oneOfType","string","element","object","bool","number","PadView","children","childrens","Children","toArray","length","Container","map","child","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  StyleSheet,\n  Switch,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nimport { renderNode, nodeType } from '../helpers';\nimport { ViewPropTypes, TextPropTypes, withTheme } from '../config';\n\nimport Avatar from '../avatar/Avatar';\nimport Badge from '../badge/badge';\nimport CheckBox from '../checkbox/CheckBox';\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\nimport ButtonGroup from '../buttons/ButtonGroup';\nimport Input from '../input/Input';\n\nconst ANDROID_SECONDARY = 'rgba(0, 0, 0, 0.54)';\n\nconst chevronDefaultProps = {\n  type: Platform.OS === 'ios' ? 'ionicon' : 'material',\n  color: '#D1D1D6',\n  name: Platform.OS === 'ios' ? 'ios-arrow-forward' : 'keyboard-arrow-right',\n  size: 16,\n};\n\nconst checkmarkDefaultProps = theme => ({\n  name: 'check',\n  size: 20,\n  color: theme.colors.primary,\n});\n\nconst renderText = (content, defaultProps, style) =>\n  renderNode(Text, content, {\n    ...defaultProps,\n    style: StyleSheet.flatten([style, defaultProps && defaultProps.style]),\n  });\n\nconst renderAvatar = content =>\n  renderNode(Avatar, content, {\n    size: 40,\n    rounded: true,\n  });\n\nconst renderIcon = content =>\n  renderNode(Icon, content, {\n    color: Platform.OS === 'ios' ? null : ANDROID_SECONDARY,\n    size: 24,\n  });\n\nconst ListItem = props => {\n  const {\n    title,\n    titleStyle,\n    titleProps,\n    subtitle,\n    subtitleStyle,\n    subtitleProps,\n    containerStyle,\n    onPress,\n    onLongPress,\n    component: Component = onPress || onLongPress ? TouchableHighlight : View,\n    leftIcon,\n    leftAvatar,\n    leftElement,\n    rightIcon,\n    rightAvatar,\n    rightElement,\n    rightTitle,\n    rightTitleStyle,\n    rightTitleProps,\n    rightSubtitle,\n    rightSubtitleStyle,\n    rightSubtitleProps,\n    input,\n    buttonGroup,\n    switch: switchProps, // switch is a reserved keyword\n    checkBox,\n    badge,\n    chevron,\n    contentContainerStyle,\n    rightContentContainerStyle,\n    checkmark,\n    disabled,\n    disabledStyle,\n    bottomDivider,\n    topDivider,\n    pad,\n    linearGradientProps,\n    ViewComponent = linearGradientProps && global.Expo\n      ? global.Expo.LinearGradient\n      : View,\n    theme,\n    ...attributes\n  } = props;\n  return (\n    <Component\n      {...attributes}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      disabled={disabled}\n    >\n      <PadView\n        Component={ViewComponent}\n        {...linearGradientProps}\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          (buttonGroup || switchProps) && { paddingVertical: 8 },\n          topDivider && { borderTopWidth: StyleSheet.hairlineWidth },\n          bottomDivider && { borderBottomWidth: StyleSheet.hairlineWidth },\n          containerStyle,\n          disabled && disabledStyle,\n        ])}\n        pad={pad}\n      >\n        {renderNode(Text, leftElement)}\n        {renderIcon(leftIcon)}\n        {renderAvatar(leftAvatar)}\n\n        {(title || subtitle) && (\n          <View\n            style={StyleSheet.flatten([\n              styles.contentContainer,\n              contentContainerStyle,\n            ])}\n          >\n            {renderText(\n              title,\n              { testID: 'listItemTitle', ...titleProps },\n              StyleSheet.flatten([styles.title, titleStyle])\n            )}\n            {renderText(\n              subtitle,\n              subtitleProps,\n              StyleSheet.flatten([styles.subtitle, subtitleStyle])\n            )}\n          </View>\n        )}\n\n        {(!!rightTitle || !!rightSubtitle) && (\n          <View\n            style={StyleSheet.flatten([\n              styles.rightContentContainer,\n              rightContentContainerStyle,\n            ])}\n          >\n            {renderText(\n              rightTitle,\n              rightTitleProps,\n              StyleSheet.flatten([\n                styles.title,\n                styles.rightTitle,\n                rightTitleStyle,\n              ])\n            )}\n\n            {renderText(\n              rightSubtitle,\n              rightSubtitleProps,\n              StyleSheet.flatten([\n                styles.subtitle,\n                styles.rightSubtitle,\n                rightSubtitleStyle,\n              ])\n            )}\n          </View>\n        )}\n\n        {input && (\n          <Input\n            {...input}\n            inputStyle={StyleSheet.flatten([\n              styles.input,\n              input && input.inputStyle,\n            ])}\n            inputContainerStyle={StyleSheet.flatten([\n              styles.inputContentContainer,\n              input && input.inputContainerStyle,\n            ])}\n            containerStyle={StyleSheet.flatten([\n              styles.inputContainer,\n              input && input.containerStyle,\n            ])}\n          />\n        )}\n        {switchProps && <Switch {...switchProps} />}\n        {checkBox && (\n          <CheckBox\n            {...checkBox}\n            containerStyle={StyleSheet.flatten([\n              styles.checkboxContainer,\n              checkBox && checkBox.containerStyle,\n            ])}\n          />\n        )}\n        {badge && <Badge {...badge} />}\n        {buttonGroup && (\n          <ButtonGroup\n            {...buttonGroup}\n            containerStyle={StyleSheet.flatten([\n              styles.buttonGroupContainer,\n              buttonGroup && buttonGroup.containerStyle,\n            ])}\n          />\n        )}\n        {renderAvatar(rightAvatar)}\n        {renderIcon(rightIcon)}\n        {renderNode(Text, rightElement)}\n        {renderNode(Icon, checkmark, checkmarkDefaultProps(theme))}\n        {renderNode(Icon, chevron, chevronDefaultProps)}\n      </PadView>\n    </Component>\n  );\n};\n\nconst styles = {\n  container: theme => ({\n    ...Platform.select({\n      ios: {\n        padding: 14,\n      },\n      default: {\n        padding: 16,\n      },\n    }),\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderColor: theme.colors.divider,\n  }),\n  title: {\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      ios: {\n        fontSize: 17,\n      },\n      default: {\n        fontSize: 16,\n      },\n    }),\n  },\n  subtitle: {\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      ios: {\n        fontSize: 15,\n      },\n      default: {\n        color: ANDROID_SECONDARY,\n        fontSize: 14,\n      },\n    }),\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  rightContentContainer: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n  inputContainer: {\n    flex: 1,\n  },\n  inputContentContainer: {\n    flex: 1,\n    borderBottomWidth: 0,\n    width: null,\n    height: null,\n  },\n  input: {\n    flex: 1,\n    textAlign: 'right',\n    width: null,\n    height: null,\n    marginLeft: 0,\n  },\n  checkboxContainer: {\n    margin: 0,\n    marginRight: 0,\n    marginLeft: 0,\n    padding: 0,\n  },\n  buttonGroupContainer: {\n    flex: 1,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0,\n  },\n  rightTitle: {\n    color: ANDROID_SECONDARY,\n  },\n  rightSubtitle: {\n    color: ANDROID_SECONDARY,\n  },\n};\n\nListItem.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  contentContainerStyle: ViewPropTypes.style,\n  rightContentContainerStyle: ViewPropTypes.style,\n  component: PropTypes.func,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: TextPropTypes.style,\n  titleProps: PropTypes.object,\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  subtitleStyle: TextPropTypes.style,\n  subtitleProps: PropTypes.object,\n  leftIcon: nodeType,\n  leftAvatar: nodeType,\n  leftElement: nodeType,\n  rightIcon: nodeType,\n  rightAvatar: nodeType,\n  rightElement: nodeType,\n  rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightTitleStyle: TextPropTypes.style,\n  rightTitleProps: PropTypes.object,\n  rightSubtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightSubtitleStyle: TextPropTypes.style,\n  rightSubtitleProps: PropTypes.object,\n  input: PropTypes.object,\n  buttonGroup: PropTypes.object,\n  switch: PropTypes.object,\n  checkBox: PropTypes.object,\n  badge: PropTypes.object,\n  chevron: nodeType,\n  checkmark: nodeType,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n  topDivider: PropTypes.bool,\n  bottomDivider: PropTypes.bool,\n  pad: PropTypes.number,\n  linearGradientProps: PropTypes.object,\n  ViewComponent: PropTypes.func,\n  theme: PropTypes.object,\n};\n\nListItem.defaultProps = {\n  pad: 16,\n};\n\nconst PadView = ({ children, pad, Component, ...props }) => {\n  const childrens = React.Children.toArray(children);\n  const length = childrens.length;\n  const Container = Component || View;\n  return (\n    <Container {...props}>\n      {React.Children.map(\n        childrens,\n        (child, index) =>\n          child && [child, index !== length - 1 && <View width={pad} />]\n      )}\n    </Container>\n  );\n};\n\nexport { ListItem };\nexport default withTheme(ListItem, 'ListItem');\n"]},"metadata":{},"sourceType":"module"}