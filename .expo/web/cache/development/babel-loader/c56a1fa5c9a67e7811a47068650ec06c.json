{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\overlay\\\\Overlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { ViewPropTypes, withTheme } from \"../config\";\nvar dimensions = Dimensions.get('window');\nvar windowWidth = dimensions.width;\nvar windowHeight = dimensions.height;\n\nvar Overlay = function Overlay(props) {\n  var children = props.children,\n      isVisible = props.isVisible,\n      containerStyle = props.containerStyle,\n      overlayStyle = props.overlayStyle,\n      windowBackgroundColor = props.windowBackgroundColor,\n      overlayBackgroundColor = props.overlayBackgroundColor,\n      onBackdropPress = props.onBackdropPress,\n      borderRadius = props.borderRadius,\n      width = props.width,\n      height = props.height,\n      fullScreen = props.fullScreen,\n      rest = _objectWithoutProperties(props, [\"children\", \"isVisible\", \"containerStyle\", \"overlayStyle\", \"windowBackgroundColor\", \"overlayBackgroundColor\", \"onBackdropPress\", \"borderRadius\", \"width\", \"height\", \"fullScreen\"]);\n\n  if (!isVisible) return null;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onBackdropPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(View, _extends({\n    testID: \"overlayContainer\",\n    style: StyleSheet.flatten([styles.container, {\n      backgroundColor: windowBackgroundColor\n    }, containerStyle])\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlay, {\n      borderRadius: borderRadius,\n      backgroundColor: overlayBackgroundColor,\n      width: width,\n      height: height\n    }, fullScreen && {\n      width: windowWidth,\n      height: windowHeight\n    }, overlayStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, children))));\n};\n\nOverlay.propTypes = {\n  children: PropTypes.any,\n  isVisible: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool\n};\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: windowWidth - 80,\n  height: windowHeight - 180,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: windowWidth,\n    height: windowHeight,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 5\n  },\n  overlay: _objectSpread({\n    borderRadius: 5,\n    padding: 10\n  }, Platform.select({\n    ios: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    },\n    android: {\n      elevation: 2\n    }\n  }))\n});\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/overlay/Overlay.js"],"names":["React","PropTypes","ViewPropTypes","withTheme","dimensions","Dimensions","get","windowWidth","width","windowHeight","height","Overlay","props","children","isVisible","containerStyle","overlayStyle","windowBackgroundColor","overlayBackgroundColor","onBackdropPress","borderRadius","fullScreen","rest","StyleSheet","flatten","styles","container","backgroundColor","overlay","propTypes","any","bool","style","string","func","number","oneOfType","defaultProps","create","position","top","left","justifyContent","alignItems","elevation","padding","Platform","select","ios","shadowColor","shadowOffset","shadowRadius","android"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  Platform,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst dimensions = Dimensions.get('window');\nconst windowWidth = dimensions.width;\nconst windowHeight = dimensions.height;\n\nconst Overlay = props => {\n  const {\n    children,\n    isVisible,\n    containerStyle,\n    overlayStyle,\n    windowBackgroundColor,\n    overlayBackgroundColor,\n    onBackdropPress,\n    borderRadius,\n    width,\n    height,\n    fullScreen,\n    ...rest\n  } = props;\n\n  if (!isVisible) return null;\n\n  return (\n    <TouchableWithoutFeedback onPress={onBackdropPress}>\n      <View\n        testID=\"overlayContainer\"\n        style={StyleSheet.flatten([\n          styles.container,\n          { backgroundColor: windowBackgroundColor },\n          containerStyle,\n        ])}\n        {...rest}\n      >\n        <TouchableWithoutFeedback>\n          <View\n            style={StyleSheet.flatten([\n              styles.overlay,\n              {\n                borderRadius,\n                backgroundColor: overlayBackgroundColor,\n                width,\n                height,\n              },\n              fullScreen && { width: windowWidth, height: windowHeight },\n              overlayStyle,\n            ])}\n          >\n            {children}\n          </View>\n        </TouchableWithoutFeedback>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nOverlay.propTypes = {\n  children: PropTypes.any,\n  isVisible: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  overlayStyle: ViewPropTypes.style,\n  windowBackgroundColor: PropTypes.string,\n  overlayBackgroundColor: PropTypes.string,\n  onBackdropPress: PropTypes.func,\n  borderRadius: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fullScreen: PropTypes.bool,\n};\n\nOverlay.defaultProps = {\n  borderRadius: 3,\n  fullScreen: false,\n  windowBackgroundColor: 'rgba(0, 0, 0, .4)',\n  overlayBackgroundColor: 'white',\n  width: windowWidth - 80,\n  height: windowHeight - 180,\n  onBackdropPress: () => null,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: windowWidth,\n    height: windowHeight,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 5,\n  },\n  overlay: {\n    borderRadius: 5,\n    padding: 10,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n      android: {\n        elevation: 2,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"]},"metadata":{},"sourceType":"module"}