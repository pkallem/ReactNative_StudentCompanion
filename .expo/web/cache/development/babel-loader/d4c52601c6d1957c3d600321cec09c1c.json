{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\screens\\\\TimerHeader.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../components/Themed\";\n\nvar TimerHeader = function (_React$Component) {\n  _inherits(TimerHeader, _React$Component);\n\n  var _super = _createSuper(TimerHeader);\n\n  function TimerHeader() {\n    var _this;\n\n    _classCallCheck(this, TimerHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleDisplay = function () {\n      if (_this.props.intervalType === \"Working\") {\n        if (_this.props.running === true) {\n          return \"Keep working!\";\n        } else {\n          return \"Time to work!\";\n        }\n      } else {\n        if (_this.props.running === true) {\n          return \"Break Time!\";\n        } else {\n          return \"Relax!\";\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TimerHeader, [{\n    key: \"render\",\n    value: function render() {\n      var texttoshow = this.handleDisplay();\n      return React.createElement(Text, {\n        style: styles.textStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 4\n        }\n      }, texttoshow);\n    }\n  }]);\n\n  return TimerHeader;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textStyle: {\n    fontSize: 25,\n    fontWeight: \"100\",\n    letterSpacing: 1.5,\n    alignSelf: 'center',\n    marginBottom: 25\n  }\n});\nexport default TimerHeader;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/screens/TimerHeader.tsx"],"names":["React","Text","TimerHeader","handleDisplay","props","intervalType","running","texttoshow","styles","textStyle","Component","StyleSheet","create","fontSize","fontWeight","letterSpacing","alignSelf","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT;;IAGMC,W;;;;;;;;;;;;;;;;UAGLC,a,GAAgB,YAAM;AACrB,UAAG,MAAKC,KAAL,CAAWC,YAAX,KAA4B,SAA/B,EACA;AACC,YAAG,MAAKD,KAAL,CAAWE,OAAX,KAAuB,IAA1B,EAAgC;AAC/B,iBAAO,eAAP;AACA,SAFD,MAGK;AACJ,iBAAO,eAAP;AACA;AACD,OARD,MASK;AACJ,YAAG,MAAKF,KAAL,CAAWE,OAAX,KAAuB,IAA1B,EAAgC;AAC/B,iBAAO,aAAP;AACA,SAFD,MAGK;AACJ,iBAAO,QAAP;AACA;AACD;AAED,K;;;;;;;WACD,kBAAS;AAER,UAAIC,UAAU,GAAG,KAAKJ,aAAL,EAAjB;AACA,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCF,UAAhC,CADD;AAIA;;;;EA9BwBP,KAAK,CAACU,S;;AAiChC,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,aAAa,EAAE,GAHN;AAIZC,IAAAA,SAAS,EAAE,QAJC;AAKZC,IAAAA,YAAY,EAAE;AALF;AADoB,CAAlB,CAAf;AAUA,eAAef,WAAf","sourcesContent":["import React from 'react';\r\nimport { Platform, StyleSheet } from 'react-native';\r\nimport { Text, useThemeColor, View} from '../components/Themed';\r\n\r\n\r\nclass TimerHeader extends React.Component {\r\n\r\n\t// handles the display of timer header\r\n\thandleDisplay = () => {\r\n\t\tif(this.props.intervalType === \"Working\")\r\n\t\t{\r\n\t\t\tif(this.props.running === true) {\r\n\t\t\t\treturn \"Keep working!\"\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn \"Time to work!\"\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(this.props.running === true) {\r\n\t\t\t\treturn \"Break Time!\"\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn \"Relax!\"\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t}\r\n\trender() {\r\n\t\r\n\t\tlet texttoshow = this.handleDisplay()\r\n\t\treturn(\r\n\t\t\t<Text style={styles.textStyle}>{texttoshow}</Text>\r\n\t\t\t\r\n\t\t)\t\t\t\t\r\n\t}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textStyle: {\r\n    fontSize: 25,\r\n    fontWeight: \"100\",\r\n    letterSpacing: 1.5,\r\n\talignSelf: 'center',\r\n\tmarginBottom: 25\r\n  }\r\n});\r\n\r\nexport default TimerHeader;"]},"metadata":{},"sourceType":"module"}