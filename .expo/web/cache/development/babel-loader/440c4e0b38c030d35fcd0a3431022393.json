{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\screens\\\\TabThreeScreen.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Agenda } from 'react-native-calendars';\nimport { Card, Avatar } from 'react-native-paper';\n\nvar timeToString = function timeToString(time) {\n  var date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nvar TabThreeScreen = function TabThreeScreen() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var loadItems = function loadItems(day) {\n    setTimeout(function () {\n      for (var i = -15; i < 85; i++) {\n        var time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        var strTime = timeToString(time);\n\n        if (!items[strTime]) {\n          items[strTime] = [];\n          var numItems = Math.floor(Math.random() * 3 + 1);\n\n          for (var j = 0; j < numItems; j++) {\n            items[strTime].push({\n              name: 'Item for ' + strTime + ' #' + j,\n              height: Math.max(50, Math.floor(Math.random() * 150))\n            });\n          }\n        }\n      }\n\n      var newItems = {};\n      Object.keys(items).forEach(function (key) {\n        newItems[key] = items[key];\n      });\n      setItems(newItems);\n    }, 1000);\n  };\n\n  var renderItem = function renderItem(item) {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        marginRight: 10,\n        marginTop: 17\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, React.createElement(Card.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, item.name), React.createElement(Avatar.Text, {\n      label: \"PK\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    })))));\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Test Message\"), React.createElement(Agenda, {\n    items: items,\n    loadItemsForMonth: loadItems,\n    selected: '2021-04-12',\n    renderItem: renderItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TabThreeScreen;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/screens/TabThreeScreen.tsx"],"names":["React","useState","Agenda","Card","Avatar","timeToString","time","date","Date","toISOString","split","TabThreeScreen","items","setItems","loadItems","day","setTimeout","i","timestamp","strTime","numItems","Math","floor","random","j","push","name","height","max","newItems","Object","keys","forEach","key","renderItem","item","marginRight","marginTop","flexDirection","justifyContent","alignItems","flex"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {View, TouchableOpacity, Text} from 'react-native';\nimport {Agenda} from 'react-native-calendars';\nimport {Card, Avatar} from 'react-native-paper';\n\nconst timeToString = (time) => {\n  const date = new Date(time);\n  return date.toISOString().split('T')[0];\n};\n\nconst TabThreeScreen: React.FC = () => {\n  const [items, setItems] = useState({});\n\n  const loadItems = (day) => {\n    setTimeout(() => {\n      for (let i = -15; i < 85; i++) {\n        const time = day.timestamp + i * 24 * 60 * 60 * 1000;\n        const strTime = timeToString(time);\n        if (!items[strTime]) {\n          items[strTime] = [];\n          const numItems = Math.floor(Math.random() * 3 + 1);\n          for (let j = 0; j < numItems; j++) {\n            items[strTime].push({\n              name: 'Item for ' + strTime + ' #' + j,\n              height: Math.max(50, Math.floor(Math.random() * 150)),\n            });\n          }\n        }\n      }\n      const newItems = {};\n      Object.keys(items).forEach((key) => {\n        newItems[key] = items[key];\n      });\n      setItems(newItems);\n    }, 1000);\n  };\n\n  const renderItem = (item) => {\n    return (\n      <TouchableOpacity style={{marginRight: 10, marginTop: 17}}>\n        <Card>\n          <Card.Content>\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n              \n              }}>\n              <Text>{item.name}</Text>\n              <Avatar.Text label=\"PK\" />\n            </View>\n          </Card.Content>\n        </Card>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={{flex: 1}}>\n      <Text>Test Message</Text>\n      <Agenda\n        items={items}\n        loadItemsForMonth={loadItems}\n        selected={'2021-04-12'}\n        renderItem={renderItem}\n      />\n    </View>\n\n    \n  );\n};\n\nexport default TabThreeScreen;\n"]},"metadata":{},"sourceType":"module"}