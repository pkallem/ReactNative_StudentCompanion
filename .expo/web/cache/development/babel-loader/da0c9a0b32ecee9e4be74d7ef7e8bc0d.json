{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\searchbar\\\\SearchBar-default.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes } from \"../config\";\nimport { renderNode, nodeType } from \"../helpers\";\nimport Input from \"../input/Input\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultSearchIcon = function defaultSearchIcon(theme) {\n  return {\n    type: 'material-community',\n    size: 18,\n    name: 'magnify',\n    color: theme.colors.grey3\n  };\n};\n\nvar defaultClearIcon = function defaultClearIcon(theme) {\n  return {\n    type: 'material-community',\n    size: 18,\n    name: 'close',\n    color: theme.colors.grey3\n  };\n};\n\nvar SearchBar = function (_Component) {\n  _inherits(SearchBar, _Component);\n\n  var _super = _createSuper(SearchBar);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _super.call(this, props);\n\n    _this.focus = function () {\n      _this.input.focus();\n    };\n\n    _this.blur = function () {\n      _this.input.blur();\n    };\n\n    _this.clear = function () {\n      _this.input.clear();\n\n      _this.onChangeText('');\n\n      _this.props.onClear();\n    };\n\n    _this.onFocus = function () {\n      _this.props.onFocus();\n    };\n\n    _this.onBlur = function () {\n      _this.props.onBlur();\n    };\n\n    _this.onChangeText = function (text) {\n      _this.props.onChangeText(text);\n\n      _this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    _this.state = {\n      isEmpty: true\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"theme\"]);\n\n      var lightTheme = rest.lightTheme,\n          round = rest.round,\n          _rest$clearIcon = rest.clearIcon,\n          clearIcon = _rest$clearIcon === void 0 ? defaultClearIcon(theme) : _rest$clearIcon,\n          containerStyle = rest.containerStyle,\n          _rest$searchIcon = rest.searchIcon,\n          searchIcon = _rest$searchIcon === void 0 ? defaultSearchIcon(theme) : _rest$searchIcon,\n          leftIconContainerStyle = rest.leftIconContainerStyle,\n          rightIconContainerStyle = rest.rightIconContainerStyle,\n          inputContainerStyle = rest.inputContainerStyle,\n          inputStyle = rest.inputStyle,\n          showLoading = rest.showLoading,\n          loadingProps = rest.loadingProps,\n          _rest$placeholderText = rest.placeholderTextColor,\n          placeholderTextColor = _rest$placeholderText === void 0 ? theme.colors.grey3 : _rest$placeholderText,\n          attributes = _objectWithoutProperties(rest, [\"lightTheme\", \"round\", \"clearIcon\", \"containerStyle\", \"searchIcon\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"showLoading\", \"loadingProps\", \"placeholderTextColor\"]);\n\n      var isEmpty = this.state.isEmpty;\n\n      var loadingStyle = loadingProps.style,\n          otherLoadingProps = _objectWithoutProperties(loadingProps, [\"style\"]);\n\n      return React.createElement(View, {\n        style: StyleSheet.flatten([styles.container(theme), lightTheme && styles.containerLight(theme), containerStyle]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(Input, _extends({}, attributes, {\n        testID: \"searchInput\",\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onChangeText: this.onChangeText,\n        ref: function ref(input) {\n          return _this2.input = input;\n        },\n        placeholderTextColor: placeholderTextColor,\n        inputStyle: StyleSheet.flatten([styles.inputStyle(theme), inputStyle]),\n        inputContainerStyle: StyleSheet.flatten([styles.inputContentContainer(theme), lightTheme && styles.inputContentContainerLight(theme), round && styles.round, inputContainerStyle]),\n        containerStyle: styles.inputContainer,\n        leftIcon: renderNode(Icon, searchIcon, defaultSearchIcon(theme)),\n        leftIconContainerStyle: StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n        rightIcon: React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        }, showLoading && React.createElement(ActivityIndicator, _extends({\n          key: \"loading\",\n          style: StyleSheet.flatten([{\n            marginRight: 5\n          }, loadingStyle])\n        }, otherLoadingProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }\n        })), !isEmpty && renderNode(Icon, clearIcon, _objectSpread(_objectSpread({}, defaultClearIcon(theme)), {}, {\n          key: 'cancel',\n          onPress: this.clear\n        }))),\n        rightIconContainerStyle: StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return SearchBar;\n}(Component);\n\nSearchBar.propTypes = {\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholderTextColor: PropTypes.string,\n  lightTheme: PropTypes.bool,\n  round: PropTypes.bool,\n  theme: PropTypes.object\n};\nSearchBar.defaultProps = {\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: function onClear() {\n    return null;\n  },\n  onFocus: function onFocus() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  },\n  onChangeText: function onChangeText() {\n    return null;\n  }\n};\nvar styles = {\n  container: function container(theme) {\n    return {\n      borderTopWidth: 1,\n      borderBottomWidth: 1,\n      borderBottomColor: '#000',\n      borderTopColor: '#000',\n      padding: 8,\n      backgroundColor: theme.colors.grey0\n    };\n  },\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  },\n  containerLight: function containerLight(theme) {\n    return {\n      borderTopColor: '#e1e1e1',\n      borderBottomColor: '#e1e1e1',\n      backgroundColor: theme.colors.grey5\n    };\n  },\n  inputContainer: {\n    width: '100%'\n  },\n  inputStyle: function inputStyle(theme) {\n    return {\n      color: theme.colors.grey3\n    };\n  },\n  inputContentContainer: function inputContentContainer(theme) {\n    return {\n      borderBottomWidth: 0,\n      borderRadius: 3,\n      overflow: 'hidden',\n      height: 30,\n      backgroundColor: theme.colors.searchBg\n    };\n  },\n  inputContentContainerLight: function inputContentContainerLight(theme) {\n    return {\n      backgroundColor: theme.colors.grey4\n    };\n  },\n  round: {\n    borderRadius: 15\n  }\n};\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/searchbar/SearchBar-default.js"],"names":["React","Component","PropTypes","ViewPropTypes","renderNode","nodeType","Input","Icon","defaultSearchIcon","theme","type","size","name","color","colors","grey3","defaultClearIcon","SearchBar","props","focus","input","blur","clear","onChangeText","onClear","onFocus","onBlur","text","setState","isEmpty","state","rest","lightTheme","round","clearIcon","containerStyle","searchIcon","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","showLoading","loadingProps","placeholderTextColor","attributes","loadingStyle","style","otherLoadingProps","StyleSheet","flatten","styles","container","containerLight","inputContentContainer","inputContentContainerLight","inputContainer","flexDirection","marginRight","key","onPress","propTypes","object","bool","Text","func","string","defaultProps","borderTopWidth","borderBottomWidth","borderBottomColor","borderTopColor","padding","backgroundColor","grey0","marginLeft","grey5","width","borderRadius","overflow","height","searchBg","grey4"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActivityIndicator, View, Text, StyleSheet } from 'react-native';\n\nimport { ViewPropTypes } from '../config';\nimport { renderNode, nodeType } from '../helpers';\n\nimport Input from '../input/Input';\nimport Icon from '../icons/Icon';\n\nconst defaultSearchIcon = theme => ({\n  type: 'material-community',\n  size: 18,\n  name: 'magnify',\n  color: theme.colors.grey3,\n});\n\nconst defaultClearIcon = theme => ({\n  type: 'material-community',\n  size: 18,\n  name: 'close',\n  color: theme.colors.grey3,\n});\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEmpty: true,\n    };\n  }\n\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClear();\n  };\n\n  onFocus = () => {\n    this.props.onFocus();\n  };\n\n  onBlur = () => {\n    this.props.onBlur();\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  render() {\n    const { theme, ...rest } = this.props;\n\n    const {\n      lightTheme,\n      round,\n      clearIcon = defaultClearIcon(theme),\n      containerStyle,\n      searchIcon = defaultSearchIcon(theme),\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      showLoading,\n      loadingProps,\n      placeholderTextColor = theme.colors.grey3,\n      ...attributes\n    } = rest;\n\n    const { isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          lightTheme && styles.containerLight(theme),\n          containerStyle,\n        ])}\n      >\n        <Input\n          {...attributes}\n          testID=\"searchInput\"\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => (this.input = input)}\n          placeholderTextColor={placeholderTextColor}\n          inputStyle={StyleSheet.flatten([\n            styles.inputStyle(theme),\n            inputStyle,\n          ])}\n          inputContainerStyle={StyleSheet.flatten([\n            styles.inputContentContainer(theme),\n            lightTheme && styles.inputContentContainerLight(theme),\n            round && styles.round,\n            inputContainerStyle,\n          ])}\n          containerStyle={styles.inputContainer}\n          leftIcon={renderNode(Icon, searchIcon, defaultSearchIcon(theme))}\n          leftIconContainerStyle={StyleSheet.flatten([\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ])}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  key=\"loading\"\n                  style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])}\n                  {...otherLoadingProps}\n                />\n              )}\n\n              {!isEmpty &&\n                renderNode(Icon, clearIcon, {\n                  ...defaultClearIcon(theme),\n                  key: 'cancel',\n                  onPress: this.clear,\n                })}\n            </View>\n          }\n          rightIconContainerStyle={StyleSheet.flatten([\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ])}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  leftIconContainerStyle: ViewPropTypes.style,\n  rightIconContainerStyle: ViewPropTypes.style,\n  inputContainerStyle: ViewPropTypes.style,\n  inputStyle: Text.propTypes.style,\n  onClear: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n  placeholderTextColor: PropTypes.string,\n  lightTheme: PropTypes.bool,\n  round: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nSearchBar.defaultProps = {\n  loadingProps: {},\n  showLoading: false,\n  lightTheme: false,\n  round: false,\n  onClear: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n};\n\nconst styles = {\n  container: theme => ({\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderBottomColor: '#000',\n    borderTopColor: '#000',\n    padding: 8,\n    backgroundColor: theme.colors.grey0,\n  }),\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n  containerLight: theme => ({\n    borderTopColor: '#e1e1e1',\n    borderBottomColor: '#e1e1e1',\n    backgroundColor: theme.colors.grey5,\n  }),\n  inputContainer: {\n    width: '100%',\n  },\n  inputStyle: theme => ({\n    color: theme.colors.grey3,\n  }),\n  inputContentContainer: theme => ({\n    borderBottomWidth: 0,\n    borderRadius: 3,\n    overflow: 'hidden',\n    height: 30,\n    backgroundColor: theme.colors.searchBg,\n  }),\n  inputContentContainerLight: theme => ({\n    backgroundColor: theme.colors.grey4,\n  }),\n  round: {\n    borderRadius: 15,\n  },\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}