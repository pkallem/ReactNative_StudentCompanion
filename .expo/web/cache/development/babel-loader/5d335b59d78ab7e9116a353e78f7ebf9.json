{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\screens\\\\TimerButtons.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NeuButton } from 'react-native-neu-element';\n\nvar TimerButtons = function (_React$Component) {\n  _inherits(TimerButtons, _React$Component);\n\n  var _super = _createSuper(TimerButtons);\n\n  function TimerButtons() {\n    var _this;\n\n    _classCallCheck(this, TimerButtons);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(TimerButtons, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.running === true) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 5\n          }\n        }, React.createElement(NeuButton, {\n          color: \"#eef2f9\",\n          width: 175,\n          height: 50,\n          borderRadius: 16,\n          onPress: this.props.pause,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 6\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 6\n          }\n        }, \"Pause\")), React.createElement(NeuButton, {\n          color: \"#eef2f9\",\n          width: 175,\n          height: 50,\n          borderRadius: 16,\n          onPress: this.props.reset,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 6\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 6\n          }\n        }, \"Reset\")));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }\n        }, React.createElement(NeuButton, {\n          color: \"#eef2f9\",\n          width: 175,\n          height: 50,\n          borderRadius: 16,\n          onPress: this.props.play,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 6\n          }\n        }, \"Play\")));\n      }\n    }\n  }]);\n\n  return TimerButtons;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n    backgroundColor: 'transparent',\n    justifyContent: 'space-evenly',\n    marginBottom: 20\n  },\n  buttonStyle: {\n    alignItems: \"center\",\n    backgroundColor: \"#C2362B\",\n    padding: 30,\n    flexDirection: \"row\",\n    borderRadius: 80\n  },\n  buttonText: {\n    color: \"white\",\n    fontSize: 25,\n    fontWeight: \"300\"\n  }\n});\nexport default TimerButtons;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/screens/TimerButtons.tsx"],"names":["React","NeuButton","TimerButtons","state","props","running","styles","container","pause","reset","play","Component","StyleSheet","create","flex","flexDirection","backgroundColor","justifyContent","marginBottom","buttonStyle","alignItems","padding","borderRadius","buttonText","color","fontSize","fontWeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAAQC,SAAR,QAAwB,0BAAxB;;IAEMC,Y;;;;;;;;;;;;;;;UACLC,K,GAAQ,E;;;;;;WAGR,kBAAS;AACR,UAAG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,IAA1B,EACA;AACC,eACC,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEC,oBAAC,SAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,UAAA,KAAK,EAAE,GAFP;AAGA,UAAA,MAAM,EAAE,EAHR;AAIA,UAAA,YAAY,EAAE,EAJd;AAMA,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARA,CAFD,EAaC,oBAAC,SAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,UAAA,KAAK,EAAE,GAFP;AAGA,UAAA,MAAM,EAAE,EAHR;AAIA,UAAA,YAAY,EAAE,EAJd;AAMA,UAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARA,CAbD,CADD;AA2BA,OA7BD,MA+BA;AACC,eACC,oBAAC,IAAD;AAAO,UAAA,KAAK,EAAEH,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEC,oBAAC,SAAD;AACA,UAAA,KAAK,EAAC,SADN;AAEA,UAAA,KAAK,EAAE,GAFP;AAGA,UAAA,MAAM,EAAE,EAHR;AAIA,UAAA,YAAY,EAAE,EAJd;AAMA,UAAA,OAAO,EAAE,KAAKH,KAAL,CAAWM,IANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARA,CAFD,CADD;AAiBA;AACD;;;;EAvDyBV,KAAK,CAACW,S;;AA0DjC,IAAML,MAAM,GAACM,UAAU,CAACC,MAAX,CAAkB;AAC9BN,EAAAA,SAAS,EAAC;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,eAAe,EAAE,aAHR;AAKTC,IAAAA,cAAc,EAAE,cALP;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS9BC,EAAAA,WAAW,EAAC;AACXC,IAAAA,UAAU,EAAE,QADD;AAEXJ,IAAAA,eAAe,EAAE,SAFN;AAGRK,IAAAA,OAAO,EAAE,EAHD;AAIRN,IAAAA,aAAa,EAAE,KAJP;AAKRO,IAAAA,YAAY,EAAE;AALN,GATkB;AAgB7BC,EAAAA,UAAU,EAAE;AACTC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,QAAQ,EAAE,EAFD;AAGTC,IAAAA,UAAU,EAAE;AAHH;AAhBiB,CAAlB,CAAb;AAuBA,eAAexB,YAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\n\r\nimport {NeuButton} from 'react-native-neu-element';\r\n\r\nclass TimerButtons extends React.Component {\r\n\tstate = {};\r\n\r\n\t//renders pause, play and reset buttons\r\n\trender() {\r\n\t\tif(this.props.running === true)\r\n\t\t{\r\n\t\t\treturn (\r\n\t\t\t\t<View style={styles.container}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<NeuButton\r\n\t\t\t\t\tcolor=\"#eef2f9\"\r\n\t\t\t\t\twidth={175}\r\n\t\t\t\t\theight={50}\r\n\t\t\t\t\tborderRadius={16}\r\n\t\t\t\t\r\n\t\t\t\t\tonPress={this.props.pause}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Text>Pause</Text>\r\n\t\t\t\t\t</NeuButton>\r\n\r\n\t\t\t\t\t<NeuButton\r\n\t\t\t\t\tcolor=\"#eef2f9\"\r\n\t\t\t\t\twidth={175}\r\n\t\t\t\t\theight={50}\r\n\t\t\t\t\tborderRadius={16}\r\n\t\t\t\t\r\n\t\t\t\t\tonPress={this.props.reset}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Text>Reset</Text>\r\n\t\t\t\t\t</NeuButton>\r\n\r\n\t\t\t\t</View>\r\n\t\t\t)\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn(\r\n\t\t\t\t<View  style={styles.container}>\r\n\t\t\t\t\r\n\t\t\t\t\t<NeuButton\r\n\t\t\t\t\tcolor=\"#eef2f9\"\r\n\t\t\t\t\twidth={175}\r\n\t\t\t\t\theight={50}\r\n\t\t\t\t\tborderRadius={16}\r\n\t\t\t\t\r\n\t\t\t\t\tonPress={this.props.play}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<Text>Play</Text>\r\n\t\t\t\t\t</NeuButton>\r\n\t\t\t\t</View>\r\n\t\t\t\t\r\n\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst styles=StyleSheet.create({\r\n\tcontainer:{\r\n\t\tflex: 1,\r\n\t\tflexDirection: \"row\" ,\r\n\t\tbackgroundColor: 'transparent',\r\n\t\t\r\n\t\tjustifyContent: 'space-evenly',\r\n\t\tmarginBottom: 20\r\n\t},\r\n\tbuttonStyle:{\r\n\t\talignItems: \"center\",\r\n\t\tbackgroundColor: \"#C2362B\",\r\n\t    padding: 30,\r\n\t    flexDirection: \"row\" ,\r\n\t    borderRadius: 80,\r\n\t}, \r\n\t buttonText: {\r\n\t    color: \"white\",\r\n\t    fontSize: 25,\r\n\t    fontWeight: \"300\",\r\n  \t}\r\n})\r\n\r\nexport default TimerButtons"]},"metadata":{},"sourceType":"module"}