{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\tile\\\\Tile.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { BackgroundImage, TextPropTypes, ViewPropTypes, withTheme } from \"../config\";\nimport Text from \"../text/Text\";\nimport Icon from \"../icons/Icon\";\nimport FeaturedTile from \"./FeaturedTile\";\n\nvar Tile = function Tile(props) {\n  var featured = props.featured,\n      imageSrc = props.imageSrc,\n      icon = props.icon,\n      title = props.title,\n      children = props.children,\n      caption = props.caption,\n      titleStyle = props.titleStyle,\n      onPress = props.onPress,\n      activeOpacity = props.activeOpacity,\n      overlayContainerStyle = props.overlayContainerStyle,\n      captionStyle = props.captionStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      containerStyle = props.containerStyle,\n      contentContainerStyle = props.contentContainerStyle,\n      titleNumberOfLines = props.titleNumberOfLines,\n      attributes = _objectWithoutProperties(props, [\"featured\", \"imageSrc\", \"icon\", \"title\", \"children\", \"caption\", \"titleStyle\", \"onPress\", \"activeOpacity\", \"overlayContainerStyle\", \"captionStyle\", \"iconContainerStyle\", \"imageContainerStyle\", \"containerStyle\", \"contentContainerStyle\", \"titleNumberOfLines\"]);\n\n  var width = props.width,\n      height = props.height;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  if (featured) {\n    var featuredProps = {\n      title: title,\n      icon: icon,\n      caption: caption,\n      imageSrc: imageSrc,\n      onPress: onPress,\n      activeOpacity: activeOpacity,\n      containerStyle: containerStyle,\n      imageContainerStyle: imageContainerStyle,\n      overlayContainerStyle: overlayContainerStyle,\n      titleStyle: titleStyle,\n      captionStyle: captionStyle,\n      width: width,\n      height: height\n    };\n    return React.createElement(FeaturedTile, _extends({}, featuredProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return React.createElement(TouchableOpacity, _extends({}, attributes, {\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: StyleSheet.flatten([{\n      width: width,\n      height: height\n    }, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }), React.createElement(BackgroundImage, {\n    source: imageSrc,\n    style: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    resizeMode: \"cover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(Icon, _extends({}, icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }\n  })))), React.createElement(View, {\n    style: StyleSheet.flatten([styles.contentContainer, contentContainerStyle && contentContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    testID: \"tileTitle\",\n    h4: true,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    numberOfLines: titleNumberOfLines,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, title), children));\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: TextPropTypes.style,\n  captionStyle: TextPropTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.any,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number\n};\nvar styles = StyleSheet.create({\n  imageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    flex: 2\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center'\n  }\n});\nexport { Tile };\nexport default withTheme(Tile, 'Tile');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/tile/Tile.js"],"names":["React","PropTypes","BackgroundImage","TextPropTypes","ViewPropTypes","withTheme","Text","Icon","FeaturedTile","Tile","props","featured","imageSrc","icon","title","children","caption","titleStyle","onPress","activeOpacity","overlayContainerStyle","captionStyle","iconContainerStyle","imageContainerStyle","containerStyle","contentContainerStyle","titleNumberOfLines","attributes","width","height","Dimensions","get","featuredProps","StyleSheet","flatten","styles","imageContainer","iconContainer","contentContainer","text","propTypes","string","object","Image","source","func","number","style","bool","any","create","alignItems","justifyContent","backgroundColor","flex","marginBottom","paddingTop","paddingBottom","paddingLeft","paddingRight","alignSelf"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Dimensions,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\n\nimport {\n  BackgroundImage,\n  TextPropTypes,\n  ViewPropTypes,\n  withTheme,\n} from '../config';\n\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\nimport FeaturedTile from './FeaturedTile';\n\nconst Tile = props => {\n  const {\n    featured,\n    imageSrc,\n    icon,\n    title,\n    children,\n    caption,\n    titleStyle,\n    onPress,\n    activeOpacity,\n    overlayContainerStyle,\n    captionStyle,\n    iconContainerStyle,\n    imageContainerStyle,\n    containerStyle,\n    contentContainerStyle,\n    titleNumberOfLines,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  if (featured) {\n    const featuredProps = {\n      title,\n      icon,\n      caption,\n      imageSrc,\n      onPress,\n      activeOpacity,\n      containerStyle,\n      imageContainerStyle,\n      overlayContainerStyle,\n      titleStyle,\n      captionStyle,\n      width,\n      height,\n    };\n    return <FeaturedTile {...featuredProps} />;\n  }\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      onPress={onPress}\n      activeOpacity={activeOpacity}\n      style={StyleSheet.flatten([\n        {\n          width,\n          height,\n        },\n        containerStyle && containerStyle,\n      ])}\n    >\n      <BackgroundImage\n        source={imageSrc}\n        style={StyleSheet.flatten([\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ])}\n        resizeMode=\"cover\"\n      >\n        <View\n          style={StyleSheet.flatten([\n            styles.iconContainer,\n            iconContainerStyle && iconContainerStyle,\n          ])}\n        >\n          {icon && <Icon {...icon} />}\n        </View>\n      </BackgroundImage>\n      <View\n        style={StyleSheet.flatten([\n          styles.contentContainer,\n          contentContainerStyle && contentContainerStyle,\n        ])}\n      >\n        <Text\n          testID=\"tileTitle\"\n          h4\n          style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\n          numberOfLines={titleNumberOfLines}\n        >\n          {title}\n        </Text>\n        {children}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  activeOpacity: PropTypes.number,\n  containerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: TextPropTypes.style,\n  captionStyle: TextPropTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  featured: PropTypes.bool,\n  children: PropTypes.any,\n  contentContainerStyle: ViewPropTypes.style,\n  titleNumberOfLines: PropTypes.number,\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff',\n    flex: 2,\n  },\n  text: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    marginBottom: 5,\n  },\n  contentContainer: {\n    paddingTop: 15,\n    paddingBottom: 5,\n    paddingLeft: 15,\n    paddingRight: 15,\n  },\n  iconContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n});\n\nexport { Tile };\nexport default withTheme(Tile, 'Tile');\n"]},"metadata":{},"sourceType":"module"}