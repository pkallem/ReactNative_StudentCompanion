{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\rating\\\\Rating.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport times from 'lodash.times';\nimport Text from \"../text/Text\";\nimport { ViewPropTypes, withTheme } from \"../config\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar STAR_WIDTH = 60;\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nvar Rating = function (_Component) {\n  _inherits(Rating, _Component);\n\n  var _super = _createSuper(Rating);\n\n  function Rating(props) {\n    var _this;\n\n    _classCallCheck(this, Rating);\n\n    _this = _super.call(this, props);\n    var _this$props = _this.props,\n        onFinishRating = _this$props.onFinishRating,\n        fractions = _this$props.fractions,\n        onStartRating = _this$props.onStartRating;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(event, gesture) {\n        var newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n\n        _this.setState({\n          position: newPosition,\n          value: gesture.dx\n        });\n      },\n      onPanResponderGrant: function onPanResponderGrant() {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        var rating = _this.getCurrentRating();\n\n        if (!fractions) {\n          _this.setCurrentRating(rating);\n        }\n\n        onFinishRating(rating);\n      }\n    });\n    _this.state = {\n      panResponder: panResponder,\n      position: position\n    };\n    return _this;\n  }\n\n  _createClass(Rating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }, {\n    key: \"getPrimaryViewStyle\",\n    value: function getPrimaryViewStyle() {\n      var position = this.state.position;\n      var _this$props2 = this.props,\n          imageSize = _this$props2.imageSize,\n          ratingCount = _this$props2.ratingCount,\n          type = _this$props2.type;\n      var color = TYPES[type].color;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: color,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"getSecondaryViewStyle\",\n    value: function getSecondaryViewStyle() {\n      var position = this.state.position;\n      var _this$props3 = this.props,\n          imageSize = _this$props3.imageSize,\n          ratingCount = _this$props3.ratingCount,\n          type = _this$props3.type;\n      var backgroundColor = TYPES[type].backgroundColor;\n      var width = position.x.interpolate({\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp'\n      }, {\n        useNativeDriver: true\n      });\n      return {\n        backgroundColor: backgroundColor,\n        width: width,\n        height: width ? imageSize : 0\n      };\n    }\n  }, {\n    key: \"renderRatings\",\n    value: function renderRatings() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          imageSize = _this$props4.imageSize,\n          ratingCount = _this$props4.ratingCount,\n          type = _this$props4.type;\n      var source = TYPES[type].source;\n      return times(ratingCount, function (index) {\n        return React.createElement(View, {\n          key: index,\n          style: styles.starContainer,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }\n        }, React.createElement(Image, {\n          source: source,\n          style: {\n            width: imageSize,\n            height: imageSize\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 9\n          }\n        }));\n      });\n    }\n  }, {\n    key: \"getCurrentRating\",\n    value: function getCurrentRating() {\n      var value = this.state.value;\n      var _this$props5 = this.props,\n          fractions = _this$props5.fractions,\n          imageSize = _this$props5.imageSize,\n          ratingCount = _this$props5.ratingCount;\n      var startingValue = ratingCount / 2;\n      var currentRating = 0;\n\n      if (value > ratingCount * imageSize / 2) {\n        currentRating = ratingCount;\n      } else if (value < -ratingCount * imageSize / 2) {\n        currentRating = 0;\n      } else if (value < imageSize || value > imageSize) {\n        currentRating = startingValue + value / imageSize;\n        currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n      } else {\n        currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n      }\n\n      return currentRating;\n    }\n  }, {\n    key: \"setCurrentRating\",\n    value: function setCurrentRating(rating) {\n      var _this$props6 = this.props,\n          imageSize = _this$props6.imageSize,\n          ratingCount = _this$props6.ratingCount;\n      var initialRating = ratingCount / 2;\n      var value = null;\n\n      if (rating > ratingCount) {\n        value = ratingCount * imageSize / 2;\n      } else if (rating < 0) {\n        value = -ratingCount * imageSize / 2;\n      } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n        value = (rating - initialRating) * imageSize;\n      } else {\n        value = 0;\n      }\n\n      var newPosition = new Animated.ValueXY();\n      newPosition.setValue({\n        x: value,\n        y: 0\n      });\n      this.setState({\n        position: newPosition,\n        value: value\n      });\n    }\n  }, {\n    key: \"displayCurrentRating\",\n    value: function displayCurrentRating() {\n      var _this$props7 = this.props,\n          ratingCount = _this$props7.ratingCount,\n          type = _this$props7.type,\n          ratingTextColor = _this$props7.ratingTextColor,\n          readonly = _this$props7.readonly,\n          showReadOnlyText = _this$props7.showReadOnlyText;\n      var color = ratingTextColor || TYPES[type].color;\n      var showReadOnlyText_ = showReadOnlyText && readonly;\n      return React.createElement(View, {\n        style: styles.showRatingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.ratingView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: StyleSheet.flatten([styles.ratingText, {\n          color: color\n        }]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }, \"Rating:\", ' '), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.currentRatingText, {\n          color: color\n        }]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }\n      }, this.getCurrentRating()), React.createElement(Text, {\n        style: StyleSheet.flatten([styles.maxRatingText, {\n          color: color\n        }]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, \"/\", ratingCount)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, showReadOnlyText_ && React.createElement(Text, {\n        style: StyleSheet.flatten([styles.readonlyLabel, {\n          color: color\n        }]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, \"(readonly)\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          readonly = _this$props8.readonly,\n          type = _this$props8.type,\n          ratingImage = _this$props8.ratingImage,\n          ratingColor = _this$props8.ratingColor,\n          ratingBackgroundColor = _this$props8.ratingBackgroundColor,\n          style = _this$props8.style,\n          showRating = _this$props8.showRating;\n\n      if (type === 'custom') {\n        var custom = {\n          source: ratingImage,\n          color: ratingColor,\n          backgroundColor: ratingBackgroundColor\n        };\n        TYPES.custom = custom;\n      }\n\n      return React.createElement(View, {\n        pointerEvents: readonly ? 'none' : 'auto',\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 7\n        }\n      }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.starsInsideWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: this.getPrimaryViewStyle(),\n        testID: \"ratingItem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }), React.createElement(Animated.View, {\n        style: this.getSecondaryViewStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      })), this.renderRatings()));\n    }\n  }]);\n\n  return Rating;\n}(Component);\n\nRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: STAR_WIDTH,\n  onFinishRating: function onFinishRating() {\n    return console.log('Attach a onFinishRating function here.');\n  }\n};\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = function fractionsType(props, propName, componentName) {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be between 0 and 20\");\n    }\n\n    return new Error(\"`\" + propName + \"` in `\" + componentName + \"` must be a number\");\n  }\n};\n\nRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  imageSize: PropTypes.number,\n  onFinishRating: PropTypes.func,\n  onStartRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  ratingTextColor: PropTypes.string,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType\n};\nexport { Rating };\nexport default withTheme(Rating, 'Rating');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/rating/Rating.js"],"names":["React","Component","PropTypes","times","Text","ViewPropTypes","withTheme","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","STAR_WIDTH","TYPES","star","source","color","backgroundColor","heart","rocket","bell","Rating","props","onFinishRating","fractions","onStartRating","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","setState","value","onPanResponderGrant","onPanResponderRelease","rating","getCurrentRating","setCurrentRating","state","startingValue","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","ratingTextColor","readonly","showReadOnlyText","showReadOnlyText_","showRatingView","ratingView","StyleSheet","flatten","ratingText","currentRatingText","maxRatingText","readonlyLabel","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","displayCurrentRating","starsWrapper","panHandlers","starsInsideWrapper","getPrimaryViewStyle","getSecondaryViewStyle","renderRatings","defaultProps","console","log","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","Image","number","func","bool"],"mappings":"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","sourcesContent":["/*global require:true*/\n/*eslint no-undef: \"error\"*/\n/*eslint-disable no-console */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Animated,\n  PanResponder,\n  Image,\n  StyleSheet,\n  Platform,\n} from 'react-native';\nimport times from 'lodash.times';\n\nimport Text from '../text/Text';\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst STAR_WIDTH = 60;\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white',\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white',\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white',\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white',\n  },\n};\n\nclass Rating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: STAR_WIDTH,\n    onFinishRating: () => console.log('Attach a onFinishRating function here.'),\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { onFinishRating, fractions, onStartRating } = this.props;\n\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        this.setState({ position: newPosition, value: gesture.dx });\n      },\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderRelease: () => {\n        const rating = this.getCurrentRating();\n        if (!fractions) {\n          // \"round up\" to the nearest star/rocket/whatever\n          this.setCurrentRating(rating);\n        }\n        onFinishRating(rating);\n      },\n    });\n\n    this.state = { panResponder, position };\n  }\n\n  componentDidMount() {\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [\n          -ratingCount * (imageSize / 2),\n          0,\n          ratingCount * (imageSize / 2),\n        ],\n        outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n        extrapolate: 'clamp',\n      },\n      { useNativeDriver: true }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0,\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [\n          -ratingCount * (imageSize / 2),\n          0,\n          ratingCount * (imageSize / 2),\n        ],\n        outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n        extrapolate: 'clamp',\n      },\n      { useNativeDriver: true }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0,\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image\n          source={source}\n          style={{ width: imageSize, height: imageSize }}\n        />\n      </View>\n    ));\n  }\n\n  getCurrentRating() {\n    const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n    const startingValue = ratingCount / 2;\n    let currentRating = 0;\n\n    if (value > ratingCount * imageSize / 2) {\n      currentRating = ratingCount;\n    } else if (value < -ratingCount * imageSize / 2) {\n      currentRating = 0;\n    } else if (value < imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions\n        ? Math.ceil(currentRating)\n        : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions\n        ? Math.ceil(startingValue)\n        : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = ratingCount * imageSize / 2;\n    } else if (rating < 0) {\n      value = -ratingCount * imageSize / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    this.setState({ position: newPosition, value });\n  }\n\n  displayCurrentRating() {\n    const {\n      ratingCount,\n      type,\n      ratingTextColor,\n      readonly,\n      showReadOnlyText,\n    } = this.props;\n\n    const color = ratingTextColor || TYPES[type].color;\n\n    const showReadOnlyText_ = showReadOnlyText && readonly;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={StyleSheet.flatten([styles.ratingText, { color }])}>\n            Rating:{' '}\n          </Text>\n          <Text\n            style={StyleSheet.flatten([styles.currentRatingText, { color }])}\n          >\n            {this.getCurrentRating()}\n          </Text>\n          <Text style={StyleSheet.flatten([styles.maxRatingText, { color }])}>\n            /{ratingCount}\n          </Text>\n        </View>\n        <View>\n          {showReadOnlyText_ && (\n            <Text style={StyleSheet.flatten([styles.readonlyLabel, { color }])}>\n              (readonly)\n            </Text>\n          )}\n        </View>\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      readonly,\n      type,\n      ratingImage,\n      ratingColor,\n      ratingBackgroundColor,\n      style,\n      showRating,\n    } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor,\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View\n          style={styles.starsWrapper}\n          {...this.state.panResponder.panHandlers}\n        >\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View\n              style={this.getPrimaryViewStyle()}\n              testID=\"ratingItem\"\n            />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5,\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e',\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a',\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e',\n  },\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(\n            `\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`\n          );\n    }\n\n    return new Error(\n      `\\`${propName}\\` in \\`${componentName}\\` must be a number`\n    );\n  }\n};\n\nRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: Image.propTypes.source,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  imageSize: PropTypes.number,\n  onFinishRating: PropTypes.func,\n  onStartRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: ViewPropTypes.style,\n  ratingTextColor: PropTypes.string,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n};\n\nexport { Rating };\nexport default withTheme(Rating, 'Rating');\n"]},"metadata":{},"sourceType":"module"}