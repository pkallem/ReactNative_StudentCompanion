{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Platform } from '@unimodules/core';\nexport function getRequestPermission() {\n  var _DeviceMotionEvent, _DeviceOrientationEve;\n\n  if (typeof DeviceMotionEvent !== 'undefined' && !!((_DeviceMotionEvent = DeviceMotionEvent) != null && _DeviceMotionEvent.requestPermission)) {\n    return DeviceMotionEvent.requestPermission;\n  } else if (typeof DeviceOrientationEvent !== 'undefined' && !!((_DeviceOrientationEve = DeviceOrientationEvent) != null && _DeviceOrientationEve.requestPermission)) {\n    return DeviceOrientationEvent.requestPermission;\n  }\n\n  return null;\n}\n\nvar PermissionError = function (_Error) {\n  _inherits(PermissionError, _Error);\n\n  var _super = _createSuper(PermissionError);\n\n  function PermissionError(eventName) {\n    _classCallCheck(this, PermissionError);\n\n    var errorMessage = \"Cannot observe event: \" + eventName + \". How to fix:\";\n    errorMessage += \"\\n- Ensure you've requested the `MOTION` permission via expo-permissions (this must be done in a touch event).\";\n\n    if (location.protocol !== 'https:') {\n      errorMessage += '\\n- Ensure that you are hosting with `https` as DeviceMotion and DeviceOrientation are now secure APIs.';\n    }\n\n    if (isIOS() && !getRequestPermission()) {\n      errorMessage += '\\n- On iOS 12.2, you must manually enable device orientation in `Settings > Safari > Motion & Orientation Access`.';\n    }\n\n    return _super.call(this, errorMessage);\n  }\n\n  return PermissionError;\n}(_wrapNativeSuper(Error));\n\nexport function assertSensorEventEnabledAsync(eventName, timeout) {\n  return _regeneratorRuntime.async(function assertSensorEventEnabledAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (Platform.isDOMAvailable) {\n            _context.next = 2;\n            break;\n          }\n\n          return _context.abrupt(\"return\", false);\n\n        case 2:\n          if (!getRequestPermission()) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(isSensorEnabledAsync(eventName, timeout));\n\n        case 5:\n          if (!_context.sent) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 7:\n          throw new PermissionError(eventName);\n\n        case 8:\n          return _context.abrupt(\"return\", true);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isSensorEnabledAsync(eventName) {\n  var timeout,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function isSensorEnabledAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          timeout = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 250;\n\n          if (Platform.isDOMAvailable) {\n            _context2.next = 3;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", false);\n\n        case 3:\n          if (!(!isIOS && !getRequestPermission())) {\n            _context2.next = 5;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", true);\n\n        case 5:\n          return _context2.abrupt(\"return\", new Promise(function (resolve) {\n            var id = setTimeout(function () {\n              window.removeEventListener(eventName, listener);\n              resolve(false);\n            }, timeout);\n\n            var listener = function listener() {\n              clearTimeout(id);\n              window.removeEventListener(eventName, listener);\n              resolve(true);\n            };\n\n            window.addEventListener(eventName, listener);\n          }));\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction isIOS() {\n  var isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  var isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}","map":{"version":3,"sources":["../../src/utils/isSensorEnabledAsync.web.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,SAAS,QAAT,QAAyB,kBAAzB;AAIA,OAAM,SAAU,oBAAV,GAA8B;AAAA;;AAClC,MAAI,OAAO,iBAAP,KAA6B,WAA7B,IAA4C,CAAC,wBAAC,iBAAD,aAAC,mBAAmB,iBAApB,CAAjD,EAAwF;AACtF,WAAO,iBAAiB,CAAC,iBAAzB;AACD,GAFD,MAEO,IACL,OAAO,sBAAP,KAAkC,WAAlC,IACA,CAAC,2BAAC,sBAAD,aAAC,sBAAwB,iBAAzB,CAFI,EAGL;AACA,WAAO,sBAAsB,CAAC,iBAA9B;AACD;;AAED,SAAO,IAAP;AACD;;IAEK,e;;;;;AACJ,2BAAY,SAAZ,EAA6B;AAAA;;AAC3B,QAAI,YAAY,8BAA4B,SAA5B,kBAAhB;AAEA,IAAA,YAAY,oHAAZ;;AAEA,QAAI,QAAQ,CAAC,QAAT,KAAsB,QAA1B,EAAoC;AAClC,MAAA,YAAY,IACV,yGADF;AAED;;AAED,QAAI,KAAK,MAAM,CAAC,oBAAoB,EAApC,EAAwC;AACtC,MAAA,YAAY,IACV,oHADF;AAED;;AAb0B,6BAerB,YAfqB;AAgB5B;;;mBAjB2B,K;;AAsB9B,OAAO,SAAe,6BAAf,CACL,SADK,EAEL,OAFK;AAAA;AAAA;AAAA;AAAA;AAAA,cAIA,QAAQ,CAAC,cAJT;AAAA;AAAA;AAAA;;AAAA,2CAKI,KALJ;;AAAA;AAAA,eAQD,oBAAoB,EARnB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CASO,oBAAoB,CAAC,SAAD,EAAY,OAAZ,CAT3B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,2CAUM,IAVN;;AAAA;AAAA,gBAYG,IAAI,eAAJ,CAAoB,SAApB,CAZH;;AAAA;AAAA,2CAcE,IAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBP,OAAO,SAAe,oBAAf,CACL,SADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeL,UAAA,OAfK,8DAea,GAfb;;AAAA,cAiBA,QAAQ,CAAC,cAjBT;AAAA;AAAA;AAAA;;AAAA,4CAkBI,KAlBJ;;AAAA;AAAA,gBAuBD,CAAC,KAAD,IAAU,CAAC,oBAAoB,EAvB9B;AAAA;AAAA;AAAA;;AAAA,4CAwBI,IAxBJ;;AAAA;AAAA,4CA2BE,IAAI,OAAJ,CAAY,UAAA,OAAO,EAAG;AAC3B,gBAAM,EAAE,GAAG,UAAU,CAAC,YAAK;AACzB,cAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,QAAtC;AACA,cAAA,OAAO,CAAC,KAAD,CAAP;AACD,aAHoB,EAGlB,OAHkB,CAArB;;AAKA,gBAAM,QAAQ,GAAG,SAAX,QAAW,GAAW;AAC1B,cAAA,YAAY,CAAC,EAAD,CAAZ;AACA,cAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,QAAtC;AACA,cAAA,OAAO,CAAC,IAAD,CAAP;AACD,aAJD;;AAMA,YAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,QAAnC;AACD,WAbM,CA3BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4CP,SAAS,KAAT,GAAc;AACZ,MAAM,OAAO,GAAG,sBAAsB,IAAtB,CAA2B,SAAS,CAAC,SAArC,CAAhB;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,UAAD,CAAvB;AACA,SAAO,OAAO,IAAI,CAAC,MAAnB;AACD","sourcesContent":["import { Platform } from '@unimodules/core';\n\ntype SensorEventName = 'deviceorientation' | 'devicemotion';\n\nexport function getRequestPermission(): (() => Promise<PermissionState>) | null {\n  if (typeof DeviceMotionEvent !== 'undefined' && !!DeviceMotionEvent?.requestPermission) {\n    return DeviceMotionEvent.requestPermission;\n  } else if (\n    typeof DeviceOrientationEvent !== 'undefined' &&\n    !!DeviceOrientationEvent?.requestPermission\n  ) {\n    return DeviceOrientationEvent.requestPermission;\n  }\n\n  return null;\n}\n\nclass PermissionError extends Error {\n  constructor(eventName: string) {\n    let errorMessage = `Cannot observe event: ${eventName}. How to fix:`;\n\n    errorMessage += `\\n- Ensure you've requested the \\`MOTION\\` permission via expo-permissions (this must be done in a touch event).`;\n\n    if (location.protocol !== 'https:') {\n      errorMessage +=\n        '\\n- Ensure that you are hosting with `https` as DeviceMotion and DeviceOrientation are now secure APIs.';\n    }\n    // is iOS and doesn't support requesting permissions, must be 12.2\n    if (isIOS() && !getRequestPermission()) {\n      errorMessage +=\n        '\\n- On iOS 12.2, you must manually enable device orientation in `Settings > Safari > Motion & Orientation Access`.';\n    }\n\n    super(errorMessage);\n  }\n}\n\n// iOS 12.2 disables DeviceMotion by default now\n// https://github.com/w3c/deviceorientation/issues/57\nexport async function assertSensorEventEnabledAsync(\n  eventName: SensorEventName,\n  timeout?: number\n): Promise<boolean> {\n  if (!Platform.isDOMAvailable) {\n    return false;\n  }\n\n  if (getRequestPermission()) {\n    if (await isSensorEnabledAsync(eventName, timeout)) {\n      return true;\n    }\n    throw new PermissionError(eventName);\n  }\n  return true;\n}\n\n// throw error if the sensor is disabled.\nexport async function isSensorEnabledAsync(\n  eventName: SensorEventName,\n  // Initial interval tests found results on a median of\n  // devicemotion:\n  // - iPhone 7 Plus: 166.6666753590107ms\n  // - iPhone X: 166.6666753590107ms\n  // deviceorientation:\n  // -\n  //\n  // The initial launch of iOS Safari onto a page calling this API seems to take a little longer than a regular call.\n  // devicemotion:\n  // - ~35ms\n  // deviceorientation:\n  // - ~45ms\n  //\n  timeout: number = 250\n): Promise<boolean> {\n  if (!Platform.isDOMAvailable) {\n    return false;\n  }\n\n  // If there is no method to request permission then the device has access to device motion.\n  // Older versions of iOS have no method but still disable motion so we should always check on iOS.\n  if (!isIOS && !getRequestPermission()) {\n    return true;\n  }\n\n  return new Promise(resolve => {\n    const id = setTimeout(() => {\n      window.removeEventListener(eventName, listener);\n      resolve(false);\n    }, timeout);\n\n    const listener = (): void => {\n      clearTimeout(id);\n      window.removeEventListener(eventName, listener);\n      resolve(true);\n    };\n\n    window.addEventListener(eventName, listener);\n  });\n}\n\n// https://stackoverflow.com/a/9039885/4047926\nfunction isIOS(): boolean {\n  const isIOSUA = /(iPad|iPhone|iPod)/g.test(navigator.userAgent);\n  const isIE11 = !!window['MSStream'];\n  return isIOSUA && !isIE11;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}