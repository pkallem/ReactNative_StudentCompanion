{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\config\\\\withTheme.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { merge, ThemeConsumer } from \"./index\";\nimport DefaultTheme from \"./theme\";\n\nvar isClassComponent = function isClassComponent(Component) {\n  return Boolean(Component.prototype && Component.prototype.isReactComponent);\n};\n\nvar withTheme = function withTheme(WrappedComponent, themeKey) {\n  var ThemedComponent = function (_React$Component) {\n    _inherits(ThemedComponent, _React$Component);\n\n    var _super = _createSuper(ThemedComponent);\n\n    function ThemedComponent() {\n      _classCallCheck(this, ThemedComponent);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(ThemedComponent, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = this.props,\n            forwardedRef = _this$props.forwardedRef,\n            rest = _objectWithoutProperties(_this$props, [\"forwardedRef\"]);\n\n        return React.createElement(ThemeConsumer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }\n        }, function (context) {\n          if (!context) {\n            var _props = _objectSpread(_objectSpread({}, rest), {}, {\n              theme: DefaultTheme\n            });\n\n            return isClassComponent(WrappedComponent) ? React.createElement(WrappedComponent, _extends({\n              ref: forwardedRef\n            }, _props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 17\n              }\n            })) : React.createElement(WrappedComponent, _extends({}, _props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }\n            }));\n          }\n\n          var theme = context.theme,\n              updateTheme = context.updateTheme;\n\n          var props = _objectSpread({\n            theme: theme,\n            updateTheme: updateTheme\n          }, merge({}, themeKey && theme[themeKey], rest));\n\n          if (isClassComponent(WrappedComponent)) {\n            return React.createElement(WrappedComponent, _extends({\n              ref: forwardedRef\n            }, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 22\n              }\n            }));\n          }\n\n          return React.createElement(WrappedComponent, _extends({}, props, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }\n          }));\n        });\n      }\n    }]);\n\n    return ThemedComponent;\n  }(React.Component);\n\n  var name = themeKey ? \"Themed.\" + themeKey : \"Themed.\" + (WrappedComponent.displayName || WrappedComponent.name || 'Component');\n\n  var forwardRef = function forwardRef(props, ref) {\n    return React.createElement(ThemedComponent, _extends({}, props, {\n      forwardedRef: ref,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  ThemedComponent.displayName = name;\n  forwardRef.displayName = name;\n\n  if (isClassComponent(WrappedComponent)) {\n    return React.forwardRef(forwardRef);\n  }\n\n  return ThemedComponent;\n};\n\nexport default withTheme;","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/config/withTheme.js"],"names":["React","merge","ThemeConsumer","DefaultTheme","isClassComponent","Component","Boolean","prototype","isReactComponent","withTheme","WrappedComponent","themeKey","ThemedComponent","props","forwardedRef","rest","context","theme","updateTheme","name","displayName","forwardRef","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,aAAhB;AACA,OAAOC,YAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,SAAS;AAAA,SAChCC,OAAO,CAACD,SAAS,CAACE,SAAV,IAAuBF,SAAS,CAACE,SAAV,CAAoBC,gBAA5C,CADyB;AAAA,CAAlC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,gBAAD,EAAmBC,QAAnB,EAAgC;AAAA,MAC1CC,eAD0C;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAE9C,kBAAS;AAAA;;AAAA,0BAE2B,KAAKC,KAFhC;AAAA,YAECC,YAFD,eAECA,YAFD;AAAA,YAEkBC,IAFlB;;AAIP,eACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAC,OAAO,EAAI;AAEV,cAAI,CAACA,OAAL,EAAc;AACZ,gBAAIH,MAAK,mCAAQE,IAAR;AAAcE,cAAAA,KAAK,EAAEd;AAArB,cAAT;;AAEA,mBAAOC,gBAAgB,CAACM,gBAAD,CAAhB,GACL,oBAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADK,GAGL,oBAAC,gBAAD,eAAsBA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF;AAKD;;AAVS,cAYFI,KAZE,GAYqBD,OAZrB,CAYFC,KAZE;AAAA,cAYKC,WAZL,GAYqBF,OAZrB,CAYKE,WAZL;;AAaV,cAAML,KAAK;AACTI,YAAAA,KAAK,EAALA,KADS;AAETC,YAAAA,WAAW,EAAXA;AAFS,aAGNjB,KAAK,CAAC,EAAD,EAAKU,QAAQ,IAAIM,KAAK,CAACN,QAAD,CAAtB,EAAkCI,IAAlC,CAHC,CAAX;;AAMA,cAAIX,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,mBAAO,oBAAC,gBAAD;AAAkB,cAAA,GAAG,EAAEI;AAAvB,eAAyCD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AACD,iBAAO,oBAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,SAxBH,CADF;AA4BD;AAlC6C;;AAAA;AAAA,IAClBb,KAAK,CAACK,SADY;;AAqChD,MAAMc,IAAI,GAAGR,QAAQ,eACPA,QADO,gBAEPD,gBAAgB,CAACU,WAAjB,IACRV,gBAAgB,CAACS,IADT,IAER,WAJe,CAArB;;AAMA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACR,KAAD,EAAQS,GAAR,EAAgB;AACjC,WAAO,oBAAC,eAAD,eAAqBT,KAArB;AAA4B,MAAA,YAAY,EAAES,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD;;AAIAV,EAAAA,eAAe,CAACQ,WAAhB,GAA8BD,IAA9B;AACAE,EAAAA,UAAU,CAACD,WAAX,GAAyBD,IAAzB;;AAGA,MAAIf,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,WAAOV,KAAK,CAACqB,UAAN,CAAiBA,UAAjB,CAAP;AACD;;AAED,SAAOT,eAAP;AACD,CAxDD;;AA0DA,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport { merge, ThemeConsumer } from './index';\nimport DefaultTheme from './theme';\n\nconst isClassComponent = Component =>\n  Boolean(Component.prototype && Component.prototype.isReactComponent);\n\nconst withTheme = (WrappedComponent, themeKey) => {\n  class ThemedComponent extends React.Component {\n    render() {\n      /* eslint-disable react/prop-types */\n      const { forwardedRef, ...rest } = this.props;\n\n      return (\n        <ThemeConsumer>\n          {context => {\n            // If user isn't using ThemeProvider\n            if (!context) {\n              let props = { ...rest, theme: DefaultTheme };\n\n              return isClassComponent(WrappedComponent) ? (\n                <WrappedComponent ref={forwardedRef} {...props} />\n              ) : (\n                <WrappedComponent {...props} />\n              );\n            }\n\n            const { theme, updateTheme } = context;\n            const props = {\n              theme,\n              updateTheme,\n              ...merge({}, themeKey && theme[themeKey], rest),\n            };\n\n            if (isClassComponent(WrappedComponent)) {\n              return <WrappedComponent ref={forwardedRef} {...props} />;\n            }\n            return <WrappedComponent {...props} />;\n          }}\n        </ThemeConsumer>\n      );\n    }\n  }\n\n  const name = themeKey\n    ? `Themed.${themeKey}`\n    : `Themed.${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'}`;\n\n  const forwardRef = (props, ref) => {\n    return <ThemedComponent {...props} forwardedRef={ref} />;\n  };\n\n  ThemedComponent.displayName = name;\n  forwardRef.displayName = name;\n\n  // Forward refs from children\n  if (isClassComponent(WrappedComponent)) {\n    return React.forwardRef(forwardRef);\n  }\n\n  return ThemedComponent;\n};\n\nexport default withTheme;\n"]},"metadata":{},"sourceType":"module"}