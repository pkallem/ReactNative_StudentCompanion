{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\badge\\\\badge.js\";\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ViewPropTypes, withTheme } from \"../config\";\n\nvar Badge = function Badge(props) {\n  var containerStyle = props.containerStyle,\n      textStyle = props.textStyle,\n      wrapperStyle = props.wrapperStyle,\n      onPress = props.onPress,\n      component = props.component,\n      value = props.value,\n      children = props.children,\n      element = props.element,\n      theme = props.theme,\n      attributes = _objectWithoutProperties(props, [\"containerStyle\", \"textStyle\", \"wrapperStyle\", \"onPress\", \"component\", \"value\", \"children\", \"element\", \"theme\"]);\n\n  if (element) return element;\n  var childElement = React.createElement(Text, {\n    style: StyleSheet.flatten([styles.text, textStyle && textStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, value);\n\n  if (children) {\n    childElement = children;\n  }\n\n  if (children && value) {\n    console.error('Badge can only contain either child element or value');\n  }\n\n  var Component = View;\n\n  if (component) {\n    Component = component;\n  } else if (onPress) {\n    Component = TouchableOpacity;\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([styles.container && wrapperStyle && wrapperStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.badge(theme), containerStyle && containerStyle]),\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), childElement));\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onPress: PropTypes.func,\n  component: PropTypes.func,\n  element: PropTypes.element,\n  theme: PropTypes.object\n};\nvar styles = {\n  container: {\n    flexDirection: 'row'\n  },\n  badge: function badge(theme) {\n    return {\n      padding: 12,\n      paddingTop: 3,\n      paddingBottom: 3,\n      borderRadius: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.colors.primary\n    };\n  },\n  text: {\n    fontSize: 14,\n    color: 'white'\n  }\n};\nexport { Badge };\nexport default withTheme(Badge, 'Badge');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/badge/badge.js"],"names":["PropTypes","React","ViewPropTypes","withTheme","Badge","props","containerStyle","textStyle","wrapperStyle","onPress","component","value","children","element","theme","attributes","childElement","StyleSheet","flatten","styles","text","console","error","Component","View","TouchableOpacity","container","badge","propTypes","style","Text","oneOfType","arrayOf","string","number","func","object","flexDirection","padding","paddingTop","paddingBottom","borderRadius","alignItems","justifyContent","backgroundColor","colors","primary","fontSize","color"],"mappings":"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","sourcesContent":["/*eslint-disable no-console */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { ViewPropTypes, withTheme } from '../config';\n\nconst Badge = props => {\n  const {\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    component,\n    value,\n    children,\n    element,\n    theme,\n    ...attributes\n  } = props;\n\n  if (element) return element;\n\n  let childElement = (\n    <Text style={StyleSheet.flatten([styles.text, textStyle && textStyle])}>\n      {value}\n    </Text>\n  );\n\n  if (children) {\n    childElement = children;\n  }\n\n  if (children && value) {\n    console.error('Badge can only contain either child element or value');\n  }\n\n  let Component = View;\n\n  if (component) {\n    Component = component;\n  } else if (onPress) {\n    Component = TouchableOpacity;\n  }\n\n  return (\n    <View\n      style={StyleSheet.flatten([\n        styles.container && wrapperStyle && wrapperStyle,\n      ])}\n    >\n      <Component\n        {...attributes}\n        style={StyleSheet.flatten([\n          styles.badge(theme),\n          containerStyle && containerStyle,\n        ])}\n        onPress={onPress}\n      >\n        {childElement}\n      </Component>\n    </View>\n  );\n};\n\nBadge.propTypes = {\n  containerStyle: ViewPropTypes.style,\n  wrapperStyle: ViewPropTypes.style,\n  textStyle: Text.propTypes.style,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onPress: PropTypes.func,\n  component: PropTypes.func,\n  element: PropTypes.element,\n  theme: PropTypes.object,\n};\n\nconst styles = {\n  container: {\n    flexDirection: 'row',\n  },\n  badge: theme => ({\n    padding: 12,\n    paddingTop: 3,\n    paddingBottom: 3,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.primary,\n  }),\n  text: {\n    fontSize: 14,\n    color: 'white',\n  },\n};\n\nexport { Badge };\nexport default withTheme(Badge, 'Badge');\n"]},"metadata":{},"sourceType":"module"}