{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\prana\\\\Desktop\\\\iits-app-main\\\\node_modules\\\\react-native-elements\\\\src\\\\tile\\\\FeaturedTile.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport NativeText from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { ViewPropTypes, BackgroundImage, withTheme } from \"../config\";\nimport Text from \"../text/Text\";\nimport Icon from \"../icons/Icon\";\n\nvar FeaturedTile = function FeaturedTile(props) {\n  var title = props.title,\n      icon = props.icon,\n      caption = props.caption,\n      imageSrc = props.imageSrc,\n      containerStyle = props.containerStyle,\n      imageContainerStyle = props.imageContainerStyle,\n      overlayContainerStyle = props.overlayContainerStyle,\n      iconContainerStyle = props.iconContainerStyle,\n      titleStyle = props.titleStyle,\n      captionStyle = props.captionStyle,\n      attributes = _objectWithoutProperties(props, [\"title\", \"icon\", \"caption\", \"imageSrc\", \"containerStyle\", \"imageContainerStyle\", \"overlayContainerStyle\", \"iconContainerStyle\", \"titleStyle\", \"captionStyle\"]);\n\n  var width = props.width,\n      height = props.height;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  var styles = StyleSheet.create({\n    container: {\n      width: width,\n      height: height\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#ffffff',\n      width: width,\n      height: height\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingTop: 45,\n      paddingBottom: 40,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    text: {\n      color: '#ffffff',\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 15,\n      textAlign: 'center'\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center'\n    }\n  });\n  return React.createElement(TouchableOpacity, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }), React.createElement(BackgroundImage, {\n    source: imageSrc,\n    style: StyleSheet.flatten([styles.imageContainer, imageContainerStyle && imageContainerStyle]),\n    resizeMode: \"cover\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlayContainer, overlayContainerStyle && overlayContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.iconContainer, iconContainerStyle && iconContainerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, icon && React.createElement(Icon, _extends({}, icon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 22\n    }\n  }))), React.createElement(Text, {\n    testID: \"featuredTileTitle\",\n    h4: true,\n    style: StyleSheet.flatten([styles.text, titleStyle && titleStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, title), React.createElement(Text, {\n    style: StyleSheet.flatten([styles.text, captionStyle && captionStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, caption))));\n};\n\nFeaturedTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\nexport { FeaturedTile };\nexport default withTheme(FeaturedTile, 'FeaturedTile');","map":{"version":3,"sources":["C:/Users/prana/Desktop/iits-app-main/node_modules/react-native-elements/src/tile/FeaturedTile.js"],"names":["React","PropTypes","ViewPropTypes","BackgroundImage","withTheme","Text","Icon","FeaturedTile","props","title","icon","caption","imageSrc","containerStyle","imageContainerStyle","overlayContainerStyle","iconContainerStyle","titleStyle","captionStyle","attributes","width","height","Dimensions","get","styles","StyleSheet","create","container","imageContainer","alignItems","justifyContent","backgroundColor","overlayContainer","flex","alignSelf","paddingLeft","paddingRight","paddingTop","paddingBottom","position","top","left","right","bottom","text","color","marginBottom","textAlign","iconContainer","flatten","propTypes","string","object","Image","source","onPress","func","style","NativeText","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;AAUA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,SAAzC;AAEA,OAAOC,IAAP;AACA,OAAOC,IAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA,MAE1BC,KAF0B,GAaxBD,KAbwB,CAE1BC,KAF0B;AAAA,MAG1BC,IAH0B,GAaxBF,KAbwB,CAG1BE,IAH0B;AAAA,MAI1BC,OAJ0B,GAaxBH,KAbwB,CAI1BG,OAJ0B;AAAA,MAK1BC,QAL0B,GAaxBJ,KAbwB,CAK1BI,QAL0B;AAAA,MAM1BC,cAN0B,GAaxBL,KAbwB,CAM1BK,cAN0B;AAAA,MAO1BC,mBAP0B,GAaxBN,KAbwB,CAO1BM,mBAP0B;AAAA,MAQ1BC,qBAR0B,GAaxBP,KAbwB,CAQ1BO,qBAR0B;AAAA,MAS1BC,kBAT0B,GAaxBR,KAbwB,CAS1BQ,kBAT0B;AAAA,MAU1BC,UAV0B,GAaxBT,KAbwB,CAU1BS,UAV0B;AAAA,MAW1BC,YAX0B,GAaxBV,KAbwB,CAW1BU,YAX0B;AAAA,MAYvBC,UAZuB,4BAaxBX,KAbwB;;AAAA,MAetBY,KAfsB,GAeJZ,KAfI,CAetBY,KAfsB;AAAA,MAefC,MAfe,GAeJb,KAfI,CAefa,MAfe;;AAiB5B,MAAI,CAACD,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAGE,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBH,KAAjC;AACD;;AACD,MAAI,CAACC,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGD,KAAK,GAAG,GAAjB;AACD;;AAED,MAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTP,MAAAA,KAAK,EAALA,KADS;AAETC,MAAAA,MAAM,EAANA;AAFS,KADoB;AAK/BO,IAAAA,cAAc,EAAE;AACdC,MAAAA,UAAU,EAAE,QADE;AAEdC,MAAAA,cAAc,EAAE,QAFF;AAGdC,MAAAA,eAAe,EAAE,SAHH;AAIdX,MAAAA,KAAK,EAALA,KAJc;AAKdC,MAAAA,MAAM,EAANA;AALc,KALe;AAY/BW,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,IAAI,EAAE,CADU;AAEhBJ,MAAAA,UAAU,EAAE,QAFI;AAGhBE,MAAAA,eAAe,EAAE,iBAHD;AAIhBG,MAAAA,SAAS,EAAE,SAJK;AAKhBJ,MAAAA,cAAc,EAAE,QALA;AAMhBK,MAAAA,WAAW,EAAE,EANG;AAOhBC,MAAAA,YAAY,EAAE,EAPE;AAQhBC,MAAAA,UAAU,EAAE,EARI;AAShBC,MAAAA,aAAa,EAAE,EATC;AAUhBC,MAAAA,QAAQ,EAAE,UAVM;AAWhBC,MAAAA,GAAG,EAAE,CAXW;AAYhBC,MAAAA,IAAI,EAAE,CAZU;AAahBC,MAAAA,KAAK,EAAE,CAbS;AAchBC,MAAAA,MAAM,EAAE;AAdQ,KAZa;AA4B/BC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJd,MAAAA,eAAe,EAAE,eAFb;AAGJe,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,SAAS,EAAE;AAJP,KA5ByB;AAkC/BC,IAAAA,aAAa,EAAE;AACblB,MAAAA,cAAc,EAAE,QADH;AAEbD,MAAAA,UAAU,EAAE,QAFC;AAGbK,MAAAA,SAAS,EAAE;AAHE;AAlCgB,GAAlB,CAAf;AAyCA,SACE,oBAAC,gBAAD,eACMf,UADN;AAEE,IAAA,KAAK,EAAEM,UAAU,CAACwB,OAAX,CAAmB,CACxBzB,MAAM,CAACG,SADiB,EAExBd,cAAc,IAAIA,cAFM,CAAnB,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAED,QADV;AAEE,IAAA,KAAK,EAAEa,UAAU,CAACwB,OAAX,CAAmB,CACxBzB,MAAM,CAACI,cADiB,EAExBd,mBAAmB,IAAIA,mBAFC,CAAnB,CAFT;AAME,IAAA,UAAU,EAAC,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEW,UAAU,CAACwB,OAAX,CAAmB,CACxBzB,MAAM,CAACQ,gBADiB,EAExBjB,qBAAqB,IAAIA,qBAFD,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEU,UAAU,CAACwB,OAAX,CAAmB,CACxBzB,MAAM,CAACwB,aADiB,EAExBhC,kBAAkB,IAAIA,kBAFE,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGN,IAAI,IAAI,oBAAC,IAAD,eAAUA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANX,CANF,EAcE,oBAAC,IAAD;AACE,IAAA,MAAM,EAAC,mBADT;AAEE,IAAA,EAAE,MAFJ;AAGE,IAAA,KAAK,EAAEe,UAAU,CAACwB,OAAX,CAAmB,CAACzB,MAAM,CAACoB,IAAR,EAAc3B,UAAU,IAAIA,UAA5B,CAAnB,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGR,KALH,CAdF,EAqBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEgB,UAAU,CAACwB,OAAX,CAAmB,CACxBzB,MAAM,CAACoB,IADiB,EAExB1B,YAAY,IAAIA,YAFQ,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,OANH,CArBF,CARF,CAPF,CADF;AAiDD,CAlHD;;AAoHAJ,YAAY,CAAC2C,SAAb,GAAyB;AACvBzC,EAAAA,KAAK,EAAER,SAAS,CAACkD,MADM;AAEvBzC,EAAAA,IAAI,EAAET,SAAS,CAACmD,MAFO;AAGvBzC,EAAAA,OAAO,EAAEV,SAAS,CAACkD,MAHI;AAIvBvC,EAAAA,QAAQ,EAAEyC,KAAK,CAACH,SAAN,CAAgBI,MAJH;AAKvBC,EAAAA,OAAO,EAAEtD,SAAS,CAACuD,IALI;AAMvB3C,EAAAA,cAAc,EAAEX,aAAa,CAACuD,KANP;AAOvBzC,EAAAA,kBAAkB,EAAEd,aAAa,CAACuD,KAPX;AAQvB3C,EAAAA,mBAAmB,EAAEZ,aAAa,CAACuD,KARZ;AASvB1C,EAAAA,qBAAqB,EAAEb,aAAa,CAACuD,KATd;AAUvBxC,EAAAA,UAAU,EAAEyC,UAAU,CAACR,SAAX,CAAqBO,KAVV;AAWvBvC,EAAAA,YAAY,EAAEwC,UAAU,CAACR,SAAX,CAAqBO,KAXZ;AAYvBrC,EAAAA,KAAK,EAAEnB,SAAS,CAAC0D,MAZM;AAavBtC,EAAAA,MAAM,EAAEpB,SAAS,CAAC0D;AAbK,CAAzB;AAgBA,SAASpD,YAAT;AACA,eAAeH,SAAS,CAACG,YAAD,EAAe,cAAf,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Text as NativeText,\n  View,\n  Image,\n  StyleSheet,\n  Dimensions,\n} from 'react-native';\n\nimport { ViewPropTypes, BackgroundImage, withTheme } from '../config';\n\nimport Text from '../text/Text';\nimport Icon from '../icons/Icon';\n\nconst FeaturedTile = props => {\n  const {\n    title,\n    icon,\n    caption,\n    imageSrc,\n    containerStyle,\n    imageContainerStyle,\n    overlayContainerStyle,\n    iconContainerStyle,\n    titleStyle,\n    captionStyle,\n    ...attributes\n  } = props;\n\n  let { width, height } = props;\n\n  if (!width) {\n    width = Dimensions.get('window').width;\n  }\n  if (!height) {\n    height = width * 0.8;\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      width,\n      height,\n    },\n    imageContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#ffffff',\n      width,\n      height,\n    },\n    overlayContainer: {\n      flex: 1,\n      alignItems: 'center',\n      backgroundColor: 'rgba(0,0,0,0.2)',\n      alignSelf: 'stretch',\n      justifyContent: 'center',\n      paddingLeft: 25,\n      paddingRight: 25,\n      paddingTop: 45,\n      paddingBottom: 40,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n    },\n    text: {\n      color: '#ffffff',\n      backgroundColor: 'rgba(0,0,0,0)',\n      marginBottom: 15,\n      textAlign: 'center',\n    },\n    iconContainer: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignSelf: 'center',\n    },\n  });\n\n  return (\n    <TouchableOpacity\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <BackgroundImage\n        source={imageSrc}\n        style={StyleSheet.flatten([\n          styles.imageContainer,\n          imageContainerStyle && imageContainerStyle,\n        ])}\n        resizeMode=\"cover\"\n      >\n        <View\n          style={StyleSheet.flatten([\n            styles.overlayContainer,\n            overlayContainerStyle && overlayContainerStyle,\n          ])}\n        >\n          <View\n            style={StyleSheet.flatten([\n              styles.iconContainer,\n              iconContainerStyle && iconContainerStyle,\n            ])}\n          >\n            {icon && <Icon {...icon} />}\n          </View>\n          <Text\n            testID=\"featuredTileTitle\"\n            h4\n            style={StyleSheet.flatten([styles.text, titleStyle && titleStyle])}\n          >\n            {title}\n          </Text>\n          <Text\n            style={StyleSheet.flatten([\n              styles.text,\n              captionStyle && captionStyle,\n            ])}\n          >\n            {caption}\n          </Text>\n        </View>\n      </BackgroundImage>\n    </TouchableOpacity>\n  );\n};\n\nFeaturedTile.propTypes = {\n  title: PropTypes.string,\n  icon: PropTypes.object,\n  caption: PropTypes.string,\n  imageSrc: Image.propTypes.source,\n  onPress: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  iconContainerStyle: ViewPropTypes.style,\n  imageContainerStyle: ViewPropTypes.style,\n  overlayContainerStyle: ViewPropTypes.style,\n  titleStyle: NativeText.propTypes.style,\n  captionStyle: NativeText.propTypes.style,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport { FeaturedTile };\nexport default withTheme(FeaturedTile, 'FeaturedTile');\n"]},"metadata":{},"sourceType":"module"}